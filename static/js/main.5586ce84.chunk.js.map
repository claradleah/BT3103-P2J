{"version":3,"sources":["../node_modules/regenerate-unicode-properties sync /^/.*/.js$","components/Form/Question.tsx","components/Navigation/SliderMenu.tsx","util/firebase.tsx","components/PastAnswers/PastAnswers.tsx","components/Question/QuestionInterface.tsx","QuestionList.tsx","components/Resume/Resume.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","QuestionType","SliderMenu","handleResume","props","history","push","handleMenu","pageWrapId","outerContainerId","isOpen","this","open","onStateChange","state","handleMenuStateChange","className","question","questions","length","Grid","container","spacing","item","xs","Button","variant","size","onClick","handleStart","toggleAdmin","Divider","style","backgroundColor","color","href","target","rel","value","userID","onChange","onUserIDChange","handleSaveState","handleLoadState","React","Component","withRouter","firebaseConfig","require","firebaseApp","firebase","TabPanel","children","index","other","hidden","aria-labelledby","maxWidth","height","Question","handleAnswerChange","newValue","answer","checkMCQAns","i","setState","mcqSelected","checkCheckboxesAns","expected","Set","toggleComplete","as","bs","a","has","eqSet","selected","handleClickQuestionView","view","handleCheckboxAnsChange","event","checked","add","delete","renderQuestion","type","EditableCode","renderEditableCode","MultipleChoice","renderMCQ","Checkboxes","renderCheckboxes","HTMLCode","renderHtmlCode","qn","questionText","options","key","Row","selection","text","margin","split","Col","marginBottom","questionTutorial","marginRight","OverlayTrigger","placement","overlay","Tooltip","hint","wrapEnabled","width","mode","theme","name","readOnly","tabSize","editorProps","$blockScrolling","Tabs","textColor","centered","TabIndicatorProps","Tab","label","onChangeIndex","lineHeight","Paper","dangerouslySetInnerHTML","__html","feedbackText","defaultAnswer","q","Container","prevQuestion","resetAnswer","marginLeft","isLoading","CircularProgress","checkAnswer","nextQuestion","disabled","completed","lastQuestion","PastAnswers","showAnswer","handlePastAnswerSelect","currQ","pastAnswers","fluid","position","top","FormControl","Select","ans","MenuItem","pastAnswer","overflow","errorMessage","QuestionInterface","showPastAnswers","handlePastAnswerSwitch","handleCloseHistory","marginTop","fontSize","showPrintMargin","Box","component","mb","borderColor","Rating","feedbackRating","onFeedbackRatingChange","saveState","emptyIcon","handleStartOver","handleNextQuestion","handlePrevQuestion","handleCheckAnswer","handleResetAnswer","renderPastAnswers","renderContent","listQuestions","showAlert","Alert","onClose","handleAlertClose","dismissible","v","handleClickQuestion","display","questionTitle","FormGroup","row","right","FormControlLabel","control","Switch","labelPlacement","testCode","exportCode","Resume","handleFacebook","preventDefault","provider","FacebookAuthProvider","auth","signInWithPopup","then","result","user","uid","catch","error","console","log","handleGoogle","GoogleAuthProvider","textAlign","fontWeight","fullWidth","path","mdiFacebookBox","fill","mdiGoogle","App","openMenu","returnedData","showSnackBar","loggedIn","questionURL","axios","post","headers","Accept","res","data","isComplete","htmlFeedback","pass","userId","currentQuestion","database","ref","update","once","snapshot","val","values","err","prompt","forEach","onAuthStateChanged","currentuser","currentUser","username","displayName","exact","render","n","Snackbar","anchorOrigin","horizontal","vertical","autoHideDuration","message","action","IconButton","TransitionComponent","Slide","direction","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6kBAAA,IAAIA,EAAM,CACT,6BAA8B,IAC9B,uCAAwC,IACxC,kCAAmC,IACnC,2BAA4B,IAC5B,gCAAiC,IACjC,oCAAqC,IACrC,qCAAsC,IACtC,sCAAuC,IACvC,6BAA8B,IAC9B,+CAAgD,IAChD,+CAAgD,IAChD,+CAAgD,IAChD,oDAAqD,IACrD,+CAAgD,IAChD,+CAAgD,IAChD,4BAA6B,IAC7B,oDAAqD,IACrD,kCAAmC,IACnC,iCAAkC,IAClC,6BAA8B,IAC9B,uCAAwC,IACxC,sCAAuC,IACvC,2CAA4C,IAC5C,0CAA2C,IAC3C,6CAA8C,IAC9C,gCAAiC,IACjC,qCAAsC,IACtC,uCAAwC,IACxC,iCAAkC,IAClC,2CAA4C,IAC5C,4CAA6C,IAC7C,mCAAoC,IACpC,gCAAiC,IACjC,mCAAoC,IACpC,oCAAqC,IACrC,+CAAgD,IAChD,iCAAkC,IAClC,4BAA6B,IAC7B,+CAAgD,IAChD,sCAAuC,IACvC,2CAA4C,IAC5C,sCAAuC,IACvC,+BAAgC,IAChC,0CAA2C,IAC3C,yCAA0C,IAC1C,mCAAoC,IACpC,4CAA6C,IAC7C,yCAA0C,IAC1C,iCAAkC,IAClC,0CAA2C,IAC3C,mCAAoC,IACpC,oCAAqC,IACrC,iCAAkC,IAClC,qCAAsC,IACtC,0CAA2C,IAC3C,8CAA+C,IAC/C,gCAAiC,IACjC,wCAAyC,IACzC,yCAA0C,IAC1C,uCAAwC,IACxC,uCAAwC,IACxC,0CAA2C,IAC3C,+BAAgC,IAChC,4CAA6C,IAC7C,+BAAgC,IAChC,sCAAuC,IACvC,uCAAwC,IACxC,yCAA0C,IAC1C,6BAA8B,IAC9B,oCAAqC,IACrC,wCAAyC,IACzC,wCAAyC,IACzC,wCAAyC,IACzC,+BAAgC,IAChC,yCAA0C,IAC1C,8BAA+B,IAC/B,qCAAsC,IACtC,qCAAsC,IACtC,0CAA2C,IAC3C,qCAAsC,IACtC,4CAA6C,IAC7C,oCAAqC,IACrC,oCAAqC,IACrC,kCAAmC,IACnC,wCAAyC,IACzC,qCAAsC,IACtC,kCAAmC,IACnC,+BAAgC,IAChC,yCAA0C,IAC1C,mCAAoC,IACpC,yCAA0C,IAC1C,oBAAqB,IACrB,mBAAoB,IACpB,oCAAqC,IACrC,qBAAsB,IACtB,uBAAwB,IACxB,sBAAuB,IACvB,uBAAwB,IACxB,oBAAqB,IACrB,wBAAyB,IACzB,oBAAqB,IACrB,sBAAuB,IACvB,wBAAyB,IACzB,uBAAwB,IACxB,qBAAsB,IACtB,sBAAuB,IACvB,uBAAwB,IACxB,oBAAqB,IACrB,kCAAmC,IACnC,qBAAsB,IACtB,iCAAkC,IAClC,qBAAsB,IACtB,mBAAoB,IACpB,uBAAwB,IACxB,qBAAsB,IACtB,qBAAsB,IACtB,wBAAyB,IACzB,sBAAuB,IACvB,uBAAwB,IACxB,sBAAuB,IACvB,yBAA0B,IAC1B,oBAAqB,IACrB,uBAAwB,IACxB,mCAAoC,IACpC,sBAAuB,IACvB,sBAAuB,IACvB,uBAAwB,IACxB,uBAAwB,IACxB,yBAA0B,IAC1B,qBAAsB,IACtB,sBAAuB,IACvB,oBAAqB,IACrB,uBAAwB,IACxB,4BAA6B,IAC7B,uBAAwB,IACxB,kBAAmB,IACnB,qBAAsB,IACtB,8BAA+B,IAC/B,sBAAuB,IACvB,qBAAsB,IACtB,qBAAsB,IACtB,uBAAwB,IACxB,+BAAgC,IAChC,wBAAyB,IACzB,oCAAqC,IACrC,qCAAsC,IACtC,uBAAwB,IACxB,qBAAsB,IACtB,sBAAuB,IACvB,uBAAwB,IACxB,uBAAwB,IACxB,yBAA0B,IAC1B,oBAAqB,IACrB,qBAAsB,IACtB,wBAAyB,IACzB,kBAAmB,IACnB,oBAAqB,IACrB,qBAAsB,IACtB,oBAAqB,IACrB,uBAAwB,IACxB,uBAAwB,IACxB,mBAAoB,IACpB,qBAAsB,IACtB,qBAAsB,IACtB,uBAAwB,IACxB,sBAAuB,IACvB,wBAAyB,IACzB,sBAAuB,IACvB,yBAA0B,IAC1B,sBAAuB,IACvB,4BAA6B,IAC7B,0BAA2B,IAC3B,2BAA4B,IAC5B,4BAA6B,IAC7B,+BAAgC,IAChC,mCAAoC,IACpC,mBAAoB,IACpB,mBAAoB,IACpB,wBAAyB,IACzB,kBAAmB,IACnB,sBAAuB,IACvB,sBAAuB,IACvB,wBAAyB,IACzB,0BAA2B,IAC3B,0BAA2B,IAC3B,mBAAoB,IACpB,kBAAmB,IACnB,oBAAqB,IACrB,qCAAsC,IACtC,oBAAqB,IACrB,uBAAwB,IACxB,4BAA6B,IAC7B,yBAA0B,IAC1B,gCAAiC,IACjC,yBAA0B,IAC1B,0BAA2B,IAC3B,0BAA2B,IAC3B,gCAAiC,IACjC,yBAA0B,IAC1B,oBAAqB,IACrB,oBAAqB,IACrB,sBAAuB,IACvB,2BAA4B,IAC5B,wBAAyB,IACzB,0BAA2B,IAC3B,uBAAwB,IACxB,yBAA0B,IAC1B,8BAA+B,IAC/B,qBAAsB,IACtB,oBAAqB,IACrB,wBAAyB,IACzB,yBAA0B,IAC1B,sBAAuB,IACvB,sBAAuB,IACvB,sBAAuB,IACvB,0BAA2B,IAC3B,sBAAuB,IACvB,sBAAuB,IACvB,2BAA4B,IAC5B,sBAAuB,IACvB,wBAAyB,IACzB,2BAA4B,IAC5B,qBAAsB,IACtB,sBAAuB,IACvB,uBAAwB,IACxB,qBAAsB,IACtB,uBAAwB,IACxB,uBAAwB,IACxB,oBAAqB,IACrB,oBAAqB,IACrB,qBAAsB,IACtB,qBAAsB,IACtB,qBAAsB,IACtB,mBAAoB,IACpB,sBAAuB,IACvB,uBAAwB,IACxB,sBAAuB,IACvB,uBAAwB,IACxB,kBAAmB,IACnB,qBAAsB,IACtB,0BAA2B,IAC3B,iBAAkB,IAClB,+BAAgC,IAChC,+BAAgC,IAChC,8BAA+B,IAC/B,+CAAgD,IAChD,gCAAiC,IACjC,kCAAmC,IACnC,iCAAkC,IAClC,kCAAmC,IACnC,+BAAgC,IAChC,mCAAoC,IACpC,+BAAgC,IAChC,iCAAkC,IAClC,mCAAoC,IACpC,kCAAmC,IACnC,gCAAiC,IACjC,iCAAkC,IAClC,kCAAmC,IACnC,+BAAgC,IAChC,6CAA8C,IAC9C,gCAAiC,IACjC,4CAA6C,IAC7C,gCAAiC,IACjC,8BAA+B,IAC/B,kCAAmC,IACnC,gCAAiC,IACjC,gCAAiC,IACjC,mCAAoC,IACpC,iCAAkC,IAClC,kCAAmC,IACnC,iCAAkC,IAClC,oCAAqC,IACrC,+BAAgC,IAChC,kCAAmC,IACnC,8CAA+C,IAC/C,iCAAkC,IAClC,iCAAkC,IAClC,kCAAmC,IACnC,kCAAmC,IACnC,oCAAqC,IACrC,gCAAiC,IACjC,iCAAkC,IAClC,+BAAgC,IAChC,kCAAmC,IACnC,uCAAwC,IACxC,kCAAmC,IACnC,6BAA8B,IAC9B,gCAAiC,IACjC,yCAA0C,IAC1C,iCAAkC,IAClC,gCAAiC,IACjC,gCAAiC,IACjC,kCAAmC,IACnC,0CAA2C,IAC3C,mCAAoC,IACpC,+CAAgD,IAChD,gDAAiD,IACjD,kCAAmC,IACnC,gCAAiC,IACjC,iCAAkC,IAClC,kCAAmC,IACnC,kCAAmC,IACnC,oCAAqC,IACrC,+BAAgC,IAChC,gCAAiC,IACjC,mCAAoC,IACpC,6BAA8B,IAC9B,+BAAgC,IAChC,gCAAiC,IACjC,+BAAgC,IAChC,kCAAmC,IACnC,kCAAmC,IACnC,8BAA+B,IAC/B,gCAAiC,IACjC,gCAAiC,IACjC,kCAAmC,IACnC,iCAAkC,IAClC,mCAAoC,IACpC,iCAAkC,IAClC,oCAAqC,IACrC,iCAAkC,IAClC,uCAAwC,IACxC,qCAAsC,IACtC,sCAAuC,IACvC,uCAAwC,IACxC,0CAA2C,IAC3C,8CAA+C,IAC/C,8BAA+B,IAC/B,8BAA+B,IAC/B,mCAAoC,IACpC,6BAA8B,IAC9B,iCAAkC,IAClC,iCAAkC,IAClC,mCAAoC,IACpC,qCAAsC,IACtC,qCAAsC,IACtC,8BAA+B,IAC/B,6BAA8B,IAC9B,+BAAgC,IAChC,gDAAiD,IACjD,+BAAgC,IAChC,kCAAmC,IACnC,uCAAwC,IACxC,oCAAqC,IACrC,2CAA4C,IAC5C,oCAAqC,IACrC,qCAAsC,IACtC,qCAAsC,IACtC,2CAA4C,IAC5C,oCAAqC,IACrC,+BAAgC,IAChC,+BAAgC,IAChC,iCAAkC,IAClC,sCAAuC,IACvC,mCAAoC,IACpC,qCAAsC,IACtC,kCAAmC,IACnC,oCAAqC,IACrC,yCAA0C,IAC1C,gCAAiC,IACjC,+BAAgC,IAChC,mCAAoC,IACpC,oCAAqC,IACrC,iCAAkC,IAClC,iCAAkC,IAClC,iCAAkC,IAClC,qCAAsC,IACtC,iCAAkC,IAClC,iCAAkC,IAClC,sCAAuC,IACvC,iCAAkC,IAClC,mCAAoC,IACpC,sCAAuC,IACvC,gCAAiC,IACjC,iCAAkC,IAClC,kCAAmC,IACnC,gCAAiC,IACjC,kCAAmC,IACnC,kCAAmC,IACnC,+BAAgC,IAChC,+BAAgC,IAChC,gCAAiC,IACjC,gCAAiC,IACjC,gCAAiC,IACjC,8BAA+B,IAC/B,iCAAkC,IAClC,kCAAmC,IACnC,iCAAkC,IAClC,kCAAmC,IACnC,6BAA8B,IAC9B,gCAAiC,IACjC,qCAAsC,IACtC,4BAA6B,IAC7B,0CAA2C,IAC3C,aAAc,IACd,uBAAwB,KAIzB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,8GCxXRY,E,wOCjBNC,E,2MAEFC,aAAe,WACX,EAAKC,MAAMC,QAAQC,KAAK,SACxB,EAAKF,MAAMG,YAAW,I,wEAGhB,IAAD,OAEL,OACI,kBAAC,OAAD,CAAMC,WAAY,YAAaC,iBAAkB,OAC7CC,OAAQC,KAAKP,MAAMQ,KACnBC,cAAe,SAACC,GAAD,OAAW,EAAKV,MAAMW,sBAAsBD,IAC3DE,UAAU,cAEe,IAAxBL,KAAKP,MAAMa,UAAkBN,KAAKP,MAAMa,WAAcN,KAAKP,MAAMc,UAAUC,OACxE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACrDC,QAASjB,KAAKP,MAAMyB,aADxB,UAKJ,kBAACT,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDAEzB,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eACjCY,QAASjB,KAAKR,cADlB,WAMJ,kBAACiB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eACjCY,QAASjB,KAAKP,MAAM0B,aADxB,eAIJ,kBAACV,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACO,EAAA,EAAD,CAASL,QAAQ,SAASM,MAAO,CAAEC,gBAAiB,WAExD,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMQ,MAAO,CAAEE,MAAO,UAAtB,uIAMR,kBAACd,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGN,UAAU,SAClC,kBAACI,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMQ,MAAO,CAAEE,MAAO,UAAtB,qFAIJ,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMQ,MAAO,CAAEE,MAAO,UAClB,uBAAGC,KAAK,gCAAgCC,OAAO,SAASC,IAAI,uBAA5D,oBAGR,kBAACjB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMQ,MAAO,CAAEE,MAAO,UAClB,uBAAGC,KAAK,0DAA0DC,OAAO,SAASC,IAAI,uBAAtF,2BAIR,kBAACjB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAACO,EAAA,EAAD,CAASL,QAAQ,SAASM,MAAO,CAAEC,gBAAiB,WAExD,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,0BAAMQ,MAAO,CAAEE,MAAO,UAAtB,2EAKJ,kBAACd,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,2BAAOR,UAAU,4BACb,2BAAOA,UAAU,8BAA8BsB,MAAO3B,KAAKP,MAAMmC,OAC7DC,SAAU,SAAC/C,GAAQ,EAAKW,MAAMqC,eAAehD,EAAE2C,OAAOE,UAE1D,0BAAMtB,UAAU,uBACZ,0BAAMA,UAAU,kBAAhB,mBAGR,yBAAKA,UAAU,UACX,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACrDC,QAASjB,KAAKP,MAAMsC,iBADxB,QAIA,kBAACjB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,uBAAuBW,KAAK,QAC7DC,QAASjB,KAAKP,MAAMuC,iBADxB,gB,GAtFPC,IAAMC,WAoGhBC,cAAW5C,G,0BCzHtB6C,G,cAAiBC,EAAQ,MAChBC,EAAcC,gBAAuBH,G,sOF4ClD,SAASI,GAAS/C,GAAa,IACpBgD,EAAoChD,EAApCgD,SAAUd,EAA0BlC,EAA1BkC,MAAOe,EAAmBjD,EAAnBiD,MAAUC,EADR,YACiBlD,EADjB,8BAG1B,OACI,uCACImD,OAAQjB,IAAUe,EAClBhE,GAAE,0BAAqBgE,GACvBG,kBAAA,qBAA+BH,GAC/BrB,MAAO,CAACyB,SAAU,OAAQC,OAAQ,SAC9BJ,GAEHF,I,SAlBDnD,O,+BAAAA,I,mCAAAA,I,2BAAAA,I,wBAAAA,M,KAgXG0D,O,YA5UX,WAAYvD,GAAiB,IAAD,8BACxB,4CAAMA,KAQVwD,mBAAqB,SAACC,GAClB,EAAKzD,MAAMa,SAAS6C,OAASD,GAVL,EAa5BE,YAAc,SAACC,GACX,EAAK5D,MAAMa,SAAS6C,OAApB,cAAoCE,GACpC,EAAKC,SAAS,CAACC,YAAaF,KAfJ,EAmB5BG,mBAAqB,WACjB,IAAMC,EAAW,IAAIC,IAAI,EAAKjE,MAAMa,SAAS6C,QAC7C,EAAK1D,MAAMkE,eAiTnB,SAAeC,EAAcC,GACzB,GAAID,EAAG5C,OAAS6C,EAAG7C,KAAM,OAAO,EADO,2BAEvC,YAAc4C,EAAd,oDAASE,EAAT,QAAkB,IAAKD,EAAGE,IAAID,GAAI,OAAO,GAFF,kFAGvC,OAAO,EApTuBE,CAAMP,EAAU,EAAKtD,MAAM8D,YArB7B,EAwB5BC,wBAA0B,SAACpF,EAAQuE,GAC/B,EAAKC,SAAS,CACVa,KAAMd,KA1Bc,EA8B5Be,wBAA0B,SAACC,EAAYhB,GACnC,IAAIY,EAAW,EAAK9D,MAAM8D,SACtBI,EAAM5C,OAAO6C,QACbL,EAASM,IAAIlB,GAEbY,EAASO,OAAOnB,GAEpB,EAAKC,SAAS,CAACW,SAAUA,KArCD,EAwC5BQ,eAAiB,WACb,OAAQ,EAAKhF,MAAMa,SAASoE,MACxB,KAAKpF,EAAaqF,aACd,OAAO,EAAKC,qBAChB,KAAKtF,EAAauF,eACd,OAAO,EAAKC,YAChB,KAAKxF,EAAayF,WACd,OAAO,EAAKC,mBAChB,KAAK1F,EAAa2F,SACd,OAAO,EAAKC,mBAjDI,EAuD5BF,iBAAmB,WAGf,IAFA,IAAMG,EAAK,EAAK1F,MAAMa,SAAS8E,aAC3BC,EAAU,GAFO,WAGZhC,GACLgC,EAAQ1F,KACJ,2BAAO2F,IAAKjC,GACP8B,EAAG9B,GACJ,2BAAOqB,KAAK,WAAW7C,SAAU,SAAC/C,GAAD,OAAO,EAAKsF,wBAAwBtF,EAAGuE,MACxE,gCALHA,EAAI,EAAGA,EAAI8B,EAAG3E,OAAQ6C,IAAM,EAA5BA,GAST,OACI,kBAACkC,EAAA,EAAD,CAAKlF,UAAU,SACX,6BAAK,uBAAGA,UAAU,wBAAuB,gCAAS8E,EAAG,MACrD,6BAAME,GACN,kBAACvE,EAAA,EAAD,CAAQT,UAAU,eAAeY,QAAS,EAAKuC,oBAA/C,oBAvEgB,EA4E5BsB,UAAY,WAGR,IAFA,IAAMK,EAAK,EAAK1F,MAAMa,SAAS8E,aAC3BI,EAAY,GAFF,WAGLnC,GACL,IAAMoC,EAAON,EAAG9B,GAChBmC,EAAU7F,KACN,yBAAKsB,QAAS,kBAAM,EAAKmC,YAAYC,IAAIiC,IAAKjC,EACzChD,UAAS,qBAAgB,EAAKF,MAAMoD,cAAgBF,EAAI,eAAiB,IAEzEhC,MAAO,CAAC0B,OAAO,GAAD,OAAK,IAAMoC,EAAG3E,OAAS,GAAvB,KAA8BkF,OAAO,GAAD,OAAK,IAAMP,EAAG3E,OAAS,GAAvB,WAElDiF,EAAKE,MAAM,MAAMpH,KAAI,SAAUqC,EAAM0E,GAClC,OACI,uBAAGA,IAAKA,EAAKjF,UAAU,mBAClBO,SAXhByC,EAAI,EAAGA,EAAI8B,EAAG3E,OAAQ6C,IAAM,EAA5BA,GAiBT,OACI,kBAACkC,EAAA,EAAD,CAAKlF,UAAU,QAAQgB,MAAO,CAAC0B,OAAQ,SACnC,kBAAC6C,EAAA,EAAD,CAAK/E,GAAI,GACL,yBAAKR,UAAU,6BAA6BgB,MAAO,CAACwE,aAAc,KAC9D,uBAAGxF,UAAU,wBAAuB,gCAAS,EAAKZ,MAAMa,SAASwF,mBACjE,yBAAKzF,UAAU,UAAUgB,MAAO,CAAC0E,YAAa,KAC1C,kBAACC,EAAA,EAAD,CACIV,IAAI,SACJW,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAASzH,GAAG,QACP,EAAKe,MAAMa,SAAS8F,OAI7B,kBAAC,IAAD,SAIZ,kBAAC,IAAD,CACIC,aAAW,EACXtD,OAAO,MACPuD,MAAM,OACNC,KAAK,aACLC,MAAM,UACNC,KAAK,cACLC,UAAU,EACVC,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBlF,MAAOwD,EAAG,MAGlB,kBAACS,EAAA,EAAD,KACKJ,KAnIW,EAyI5BZ,mBAAqB,WACjB,OACI,kBAACW,EAAA,EAAD,CAAKlF,UAAU,QAAQgB,MAAO,CAAC0B,OAAQ,SACnC,kBAAC6C,EAAA,EAAD,CAAK/E,GAAI,EAAGQ,MAAO,CAAC0B,OAAQ,QAAS1C,UAAU,sBAC3C,kBAACyG,EAAA,EAAD,CACInF,MAAO,EAAKxB,MAAMgE,KAClBtC,SAAU,EAAKqC,wBACf6C,UAAU,UACVhG,QAAQ,YACRiG,UAAQ,EACRC,kBACI,CACI5G,UAAW,eAInB,kBAAC6G,EAAA,EAAD,CAAKC,MAAM,WAAWxF,MAAO,IAC7B,kBAACuF,EAAA,EAAD,CAAKC,MAAM,SAASxF,MAAO,KAE/B,kBAAC,KAAD,CACIe,MAAO,EAAKvC,MAAMgE,KAClBiD,cAAe,EAAKlD,wBACpB7D,UAAU,eAEV,kBAACmC,GAAD,CAAUb,MAAO,EAAKxB,MAAMgE,KAAMzB,MAAO,GACrC,yBAAKrB,MAAO,CAACgG,WAAY,IACrB,6CACC,EAAK5H,MAAMa,SAASwF,iBAAiBH,MAAM,MAAMpH,KAAI,SAAUqC,EAAM0E,GAClE,OACI,0BAAMA,IAAKA,EAAKjF,UAAU,iBACrBO,EACD,mCAKpB,kBAAC4B,GAAD,CAAUb,MAAO,EAAKxB,MAAMgE,KAAMzB,MAAO,GACrC,kBAAC4E,GAAA,EAAD,KACI,yBACIC,wBAAyB,CAACC,OAAQ,EAAK/H,MAAMa,SAASmH,oBAM1E,kBAAC7B,EAAA,EAAD,CAAK/E,GAAI,EAAGQ,MAAO,CAAC0B,OAAQ,SACxB,yBAAK1C,UAAU,6BAA6BgB,MAAO,CAACwE,aAAc,KAC9D,uBAAGxF,UAAU,wBAAuB,gCAAS,EAAKZ,MAAMa,SAAS8E,eACjE,yBAAK/E,UAAU,UAAUgB,MAAO,CAAC0E,YAAa,KAC1C,kBAACC,EAAA,EAAD,CACIV,IAAI,SACJW,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAASzH,GAAG,QACP,EAAKe,MAAMa,SAAS8F,OAI7B,kBAAC,IAAD,SAIZ,kBAAC,IAAD,CACIC,aAAW,EACXtD,OAAO,MACPuD,MAAM,OACNC,KAAK,aACLC,MAAM,UACNC,KAAK,cACL5E,SAAU,EAAKoB,mBACf0D,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBlF,MAAO,EAAKlC,MAAMa,SAAS6C,YAnNnB,EA2N5B+B,eAAiB,WACb,OACI,kBAAC,KAAD,CAAclG,KAAM,EAAKS,MAAMa,SAASoH,eACpC,kBAACnC,EAAA,EAAD,CAAKlF,UAAU,QAAQgB,MAAO,CAAC0B,OAAQ,SACnC,kBAAC6C,EAAA,EAAD,CAAK/E,GAAI,EAAGQ,MAAO,CAAC0B,OAAQ,QAAS1C,UAAU,sBAC3C,kBAACyG,EAAA,EAAD,CACInF,MAAO,EAAKxB,MAAMgE,KAClBtC,SAAU,EAAKqC,wBACf6C,UAAU,UACVhG,QAAQ,YACRiG,UAAQ,EACRC,kBACI,CACI5G,UAAW,eAInB,kBAAC6G,EAAA,EAAD,CAAKC,MAAM,WAAWxF,MAAO,IAC7B,kBAACuF,EAAA,EAAD,CAAKC,MAAM,YAAYxF,MAAO,KAElC,kBAAC,KAAD,CACIe,MAAO,EAAKvC,MAAMgE,KAClBiD,cAAe,EAAKlD,wBACpB7D,UAAU,eAEV,kBAACmC,GAAD,CAAUb,MAAO,EAAKxB,MAAMgE,KAAMzB,MAAO,GACrC,yBAAKrB,MAAO,CAACgG,WAAY,IACrB,6CACC,EAAK5H,MAAMa,SAASwF,iBAAiBH,MAAM,MAAMpH,KAAI,SAAUqC,EAAM0E,GAClE,OACI,0BAAMA,IAAKA,EAAKjF,UAAU,iBACzBO,EACG,mCAKpB,kBAAC4B,GAAD,CAAUb,MAAO,EAAKxB,MAAMgE,KAAMzB,MAAO,GACrC,kBAAC,KAAD,SAIZ,kBAACkD,EAAA,EAAD,CAAK/E,GAAI,EAAGQ,MAAO,CAAC0B,OAAQ,SACxB,yBAAK1C,UAAU,6BAA6BgB,MAAO,CAACwE,aAAc,KAC9D,uBAAGxF,UAAU,wBAAuB,gCAAS,EAAKZ,MAAMa,SAASwF,mBAEjE,yBAAKzF,UAAU,UAAUgB,MAAO,CAAC0E,YAAa,KAC1C,kBAACC,EAAA,EAAD,CACIV,IAAI,SACJW,UAAU,SACVC,QACI,kBAACC,EAAA,EAAD,CAASzH,GAAG,QACP,EAAKe,MAAMa,SAAS8F,OAI7B,kBAAC,IAAD,SAIZ,kBAACkB,GAAA,EAAD,CAAOjG,MAAO,CAAC0B,OAAO,QAClB,kBAAC,KAAD,MACA,kBAAC,KAAD,WAvRpB,EAAK5C,MAAQ,CACT8D,SAAU,IAAIP,IACdS,KAAM,EACNZ,YAAa,GALO,E,sEAkSxB,IAAMoE,EAAI3H,KAAKP,MAAMa,SACrB,OACI,kBAACsH,EAAA,EAAD,CAAWvH,UAAU,gEAChBL,KAAKyE,iBACN,kBAACc,EAAA,EAAD,CAAKlF,UAAU,gBACX,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACjDC,QAASjB,KAAKP,MAAMoI,cAD5B,YAIA,kBAAC/G,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACjDC,QAASjB,KAAKP,MAAMqI,YACpBzG,MAAO,CAAC0G,WAAY,KAF5B,SAMC/H,KAAKP,MAAMuI,UACR,kBAACC,EAAA,EAAD,CAAkB5H,UAAU,0BAC1B,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,uBAAuBW,KAAK,QACzDC,QAASjB,KAAKP,MAAMyI,aAD5B,OAMN,kBAACpH,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACjDC,QAASjB,KAAKP,MAAM0I,aAAc9G,MAAO,CAAC0G,WAAY,IACtDK,UAAWT,EAAEU,WAEhBrI,KAAKP,MAAM6I,aAAe,SAAW,c,GA9TvCrG,IAAMC,W,8BGKdqG,G,2MA/DXpI,MAAQ,CACJqI,WAAY,G,EAGhBC,uBAAyB,SAAC3J,GACtB,EAAKwE,SAAS,CAAEkF,WAAY1J,EAAE2C,OAAOE,S,wEAIrC,IAAMpB,EAAYP,KAAKP,MAAMc,UACvBmI,EAAQ1I,KAAKP,MAAMa,SAEzB,OAAKC,EAAUmI,GAAOC,aAAuD,IAAxCpI,EAAUmI,GAAOC,YAAYnI,OAO9D,kBAACoH,EAAA,EAAD,CAAWgB,OAAK,GACZ,kBAACrD,EAAA,EAAD,CAAKlE,MAAO,CAAEwH,SAAU,WAAYC,IAAK,UACrC,kBAACxB,GAAA,EAAD,KACI,kBAACyB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQrH,MAAO3B,KAAKG,MAAMqI,WAAY3G,SAAU7B,KAAKyI,wBAChDlI,EAAUmI,GAAOC,YAAYpK,KAAI,SAAC0K,EAAKvG,GACpC,OACI,kBAACwG,GAAA,EAAD,CAAUvH,MAAOe,GAAQA,EAAQ,EAAjC,aAA8CA,EAAQ,UAO9E,kBAAC6C,EAAA,EAAD,CAAKlE,MAAO,CAAE0B,OAAQ,SAClB,kBAAC6C,EAAA,EAAD,CAAK/E,GAAI,EAAGQ,MAAO,CAAE0B,OAAQ,SACzB,kBAAC,IAAD,CACI2D,UAAU,EACVL,aAAW,EACXtD,OAAO,OACPuD,MAAM,OACNC,KAAK,aACLC,MAAM,UACNC,KAAK,eACLE,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBlF,MAAOpB,EAAUmI,GAAOC,YAAY3I,KAAKG,MAAMqI,YAAYW,WAC3D9H,MAAO,CAAEyB,SAAU,QAG3B,kBAAC8C,EAAA,EAAD,CAAK/E,GAAI,EAAGQ,MAAO,CAAE0B,OAAQ,SACzB,kBAACuE,GAAA,EAAD,CAAOjG,MAAO,CAAE0B,OAAQ,OAAQqG,SAAU,WACtC,yBACI7B,wBAAyB,CAAEC,OAAQjH,EAAUmI,GAAOC,YAAY3I,KAAKG,MAAMqI,YAAYa,oBAxCvG,wBAAIhJ,UAAU,eAAd,8C,GAhBU4B,IAAMC,W,yCCuOjBoH,I,kNAxMXnJ,MAAQ,CACJoJ,iBAAiB,G,EAGrBC,uBAAyB,SAAC1K,GACtB,EAAKwE,SAAS,CAAEiG,gBAAiBzK,EAAE2C,OAAO6C,W,EAG9CmF,mBAAqB,WACjB,EAAKnG,SAAS,CAAEiG,iBAAiB,K,EAIrC9E,eAAiB,WACb,IAAMlE,EAAY,EAAKd,MAAMc,UACvBmI,EAAQ,EAAKjJ,MAAMa,SACzB,OAAQoI,GACJ,KAAK,EACD,OACI,yBAAKrI,UAAU,gEACX,kBAAC,IAAD,CAAQA,UAAU,cAAlB,kDAGA,yBAAKA,UAAU,+DACXgB,MAAO,CAAEqI,UAAW,SACpB,kBAAC,IAAD,CACIhD,UAAU,EACVL,aAAW,EACXtD,OAAO,OACPuD,MAAM,OACNqD,SAAU,GACVC,iBAAiB,EACjBrD,KAAK,aACLC,MAAM,UACNC,KAAK,eACLE,QAAS,EACTC,YAAa,CACTC,iBAAiB,GAErBlF,MAAOpB,EAAUmI,GAAOtD,gBAGhC,kBAACtE,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,uBAAuBW,KAAK,QAC7DC,QAAS,EAAKxB,MAAMyB,aADxB,UAMZ,KAAKX,EAAUC,OACX,OACI,yBAAKH,UAAU,gEACX,kBAAC,IAAD,CAAQA,UAAU,cAAlB,2CAGA,uBAAGgB,MAAO,CAAEwE,aAAc,IAA1B,kCACA,kBAACgE,GAAA,EAAD,CAAKC,UAAU,WAAWC,GAAI,EAAGC,YAAY,eACzC,kBAACC,GAAA,EAAD,CACIxD,KAAK,oBACL9E,MAAO,EAAKlC,MAAMyK,eAClBrI,SAAU,SAACwC,EAAOnB,GACd,EAAKzD,MAAM0K,uBAAuBjH,GAElC,EAAKzD,MAAM2K,aAEfpJ,KAAK,QACLqJ,UAAW,kBAAC,KAAD,CAAgBV,SAAS,UAAUtI,MAAO,CAAEE,MAAO,cAGtE,2EAAgD,uBAC5CC,KAAK,kHACLnB,UAAU,iBAFkC,QAAhD,KAGA,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACrDC,QAAS,EAAKxB,MAAM6K,iBADxB,eAMZ,QACI,OACI,kBAAC,GAAD,CAAUhK,SAAUC,EAAUmI,GAC1BhG,MAAOgG,EACPP,aAAc,EAAK1I,MAAM8K,mBACzB1C,aAAc,EAAKpI,MAAM+K,mBACzBtC,YAAa,EAAKzI,MAAMgL,kBACxB3C,YAAa,EAAKrI,MAAMiL,kBACxBpC,aAAcI,IAAUnI,EAAUC,OAAS,EAC3CmD,eAAgB,EAAKlE,MAAMkE,eAC3BqE,UAAW,EAAKvI,MAAMuI,c,EAO1C2C,kBAAoB,WAChB,OAAO,kBAAC,GAAD,CAAapK,UAAW,EAAKd,MAAMc,UACtCD,SAAU,EAAKb,MAAMa,Y,EAG7BsK,cAAgB,WACZ,OAAK,EAAKzK,MAAMoJ,gBAGL,EAAKoB,oBAFL,EAAKlG,kB,wEAMV,IAAD,OACClE,EAAYP,KAAKP,MAAMc,UACvBmI,EAAQ1I,KAAKP,MAAMa,SACnBuK,EAAgB7K,KAAKP,MAAMc,UAAUhC,KAAI,SAAC+B,EAAUoC,GACtD,GAAc,IAAVA,EACA,OAAO,KAEX,IAAIrC,EAAY,kBAOhB,OANIC,EAAS+H,YACThI,GAAa,cAEbqC,IAAUgG,IACVrI,GAAa,YAGb,kBAAC6G,EAAA,EAAD,CAAK5B,IAAK5C,EACNrC,UAAS,4BACT8G,MACI,yBAAK9G,UAAU,6BACX,yBAAKA,UAAWA,GAAYqC,SAMhD,OACI,kBAACkF,EAAA,EAAD,CAAWgB,OAAK,GACX5I,KAAKP,MAAMqL,UACR,kBAACvF,EAAA,EAAD,CAAKlF,UAAU,mDAAmDgB,MAAO,CAAEwE,aAAc,KACrF,kBAACD,EAAA,EAAD,CAAK/E,GAAI,IACJb,KAAKP,MAAMc,UAAUmI,GAAOL,UACzB,kBAAC0C,EAAA,EAAD,CAAOhK,QAAQ,UAAUiK,QAAShL,KAAKP,MAAMwL,iBAAkBC,aAAW,GAA1E,6EAGA,kBAACH,EAAA,EAAD,CAAOhK,QAAQ,SAASiK,QAAShL,KAAKP,MAAMwL,iBAAkBC,aAAW,GAAzE,oEAKH,GAEZxC,EAAQ,GAAKA,EAAQnI,EAAUC,OAC5B,kBAAC+E,EAAA,EAAD,CAAKlF,UAAU,oDACX,kBAACyG,EAAA,EAAD,CACInF,MAAO+G,EAAQ,EACf7G,SAAU,SAAC/C,EAAGqM,GACN5K,EAAU4K,EAAI,GAAG9C,YACjB,EAAKoB,qBACL,EAAKhK,MAAM2L,oBAAoBD,EAAI,KAG3CpE,UAAU,UACVhG,QAAQ,YACRiG,UAAQ,EACRC,kBACI,CACI5G,UAAW,aACXgB,MAAO,CAAEgK,QAAS,UAIzBR,IAEA,GACZnC,EAAQ,GAAKA,EAAQnI,EAAUC,OAC5B,kBAAC+E,EAAA,EAAD,CAAKlF,UAAU,oDACX,wBAAIA,UAAU,kBAAkBL,KAAKP,MAAMc,UAAUmI,GAAO4C,eAC5D,kBAACC,EAAA,EAAD,CAAWC,KAAG,EAACnK,MAAO,CAAEwH,SAAU,WAAY4C,MAAO,IACjD,kBAACC,EAAA,EAAD,CACInK,MAAM,UACNoK,QACI,kBAACC,EAAA,EAAD,CAAQtH,QAAStE,KAAKG,MAAMoJ,gBACxB1H,SAAU7B,KAAKwJ,uBACf7H,MAAM,oBAEdwF,MAAM,oBACN0E,eAAe,YAIzB,GAEN,kBAACtG,EAAA,EAAD,CAAKlF,UAAU,oDACX,kBAACuF,EAAA,EAAD,KACK5F,KAAK4K,uB,GAhME1I,cC7CnB3B,I,OACT,CACI,CACI+K,cAAe,GACfxF,iBAAkB,GAClBV,aAAc,yoBACdjC,OAAQ,GACRuE,cAAe,GACftB,KAAM,GACNqB,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,GACTC,WAAY,GACZpD,YAAa,IAEjB,CACI2C,cAAe,WACfxF,iBAAkB,wGAClBV,aAAc,qDACdgB,KAAM,oCACNjD,OAAQ,0EAMRuE,cAAe,0EAMfD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,yFAKTC,WAAY,GACZpD,YAAa,IAEjB,CACI2C,cAAe,eACfxF,iBAAkB,wNAGlBV,aAAc,qDACdgB,KAAM,gDACNjD,OAAO,oHAMPuE,cAAc,oHAMdD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,8PAQTC,WAAW,+EAKXpD,YAAa,IAEjB,CACI2C,cAAe,kBACfxF,iBAAkB,4GAClBV,aAAc,qDACdgB,KAAM,2DACNjD,OAAQ,2CACRuE,cAAe,2CACfD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,yIAMTC,WAAY,6BACZpD,YAAa,IAEjB,CACI2C,cAAe,kBACfxF,iBAAiB,qKAGjBV,aAAc,iDACdgB,KAAM,gDACNjD,OAAO,mDAGPuE,cAAc,mDAGdD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,yIAMTC,WAAY,6BACZpD,YAAa,IAEjB,CACI2C,cAAe,kBACfxF,iBAAkB,4OAClBV,aAAc,qDACdgB,KAAM,iEACNjD,OAAQ,uJAKRuE,cAAe,uJAKfD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,sHAKTC,WAAY,iCACZpD,YAAa,IAEjB,CACI2C,cAAe,wBACfxF,iBAAkB,6HAClBV,aAAc,2BACdgB,KAAM,oDACNjD,OAAO,yBAGPuE,cAAc,yBAGdD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,uLAOTC,WAAY,uBACZpD,YAAa,IAEjB,CACI2C,cAAe,uBACfxF,iBAAiB,6OACjBV,aAAc,kCACdgB,KAAM,GACNjD,OAAO,gLAOPuE,cAAc,gLAOdD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,2RAQTC,WAAY,iCACZpD,YAAa,IAEjB,CACI2C,cAAe,iCACfxF,iBAAkB,oFAClBV,aAAc,qDACdgB,KAAM,GACNjD,OAAO,gOAgBPuE,cAAc,gOAgBdD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,4HAMTC,WAAW,mCAGXpD,YAAa,IAEjB,CACI2C,cAAe,uBACfxF,iBAAkB,sIAClBV,aAAc,4EACdgB,KAAM,0DACNjD,OAAO,8KAWPuE,cAAc,8KAWdD,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAaqF,aACnBmH,SAAS,qGAKTC,WAAW,uBAEXpD,YAAa,IAEjB,CACI2C,cAAe,WACfxF,iBAAkB,uCAClBV,aAAc,CAAC,wVAAD,kJA2BdjC,OAAQ,GACRuE,cAAe,GACftB,KAAM,GACNqB,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAauF,eACnBiH,SAAS,4FAKTC,WAAW,mBAEXpD,YAAa,IAEjB,CACI2C,cAAe,uBACfxF,iBAAkB,8DAClBV,aAAc,sQACdjC,OAAO,GACPuE,cACI,siCAgDJtB,KAAM,GACNqB,aAAc,GACdY,WAAW,EACX3D,KAAMpF,EAAa2F,SACnB6G,SAAS,yIAKTC,WAAY,GACZpD,YAAa,M,6BCtYnBqD,I,kNAEFC,eAAiB,SAACnN,GACdA,EAAEoN,iBACF,IAAMC,EAAW,IAAI5J,OAAc6J,qBACnC9J,EAAY+J,OAAOC,gBAAgBH,GAAUI,MAAK,SAACC,GAE/C,GAAe,OAAXA,GAAmC,OAAhBA,EAAOC,MAAqC,OAApBD,EAAOC,KAAKC,IAAc,CACrE,IAAM9K,EAAS4K,EAAOC,KAAKC,IAC3B,EAAKjN,MAAMqC,eAAeF,GAC1B,EAAKnC,MAAMuC,kBACX,EAAKvC,MAAMC,QAAQC,KAAK,SAE7BgN,OAAM,SAACC,GACNC,QAAQC,IAAIF,O,EAIpBG,aAAe,SAACjO,GACZA,EAAEoN,iBACF,IAAMC,EAAW,IAAI5J,OAAcyK,mBACnC1K,EAAY+J,OAAOC,gBAAgBH,GAAUI,MAAK,SAACC,GAE/C,GAAe,OAAXA,GAAmC,OAAhBA,EAAOC,MAAqC,OAApBD,EAAOC,KAAKC,IAAc,CACrE,IAAM9K,EAAS4K,EAAOC,KAAKC,IAC3B,EAAKjN,MAAMqC,eAAeF,GAC1B,EAAKnC,MAAMuC,kBACX,EAAKvC,MAAMC,QAAQC,KAAK,SAG7BgN,OAAM,SAACC,GACNC,QAAQC,IAAIF,O,wEAIV,IAAD,OACL,OACI,yBAAKvL,MAAO,CAAEiF,MAAO,MACjB,kBAAC7F,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,0BAAMgB,MAAO,CAAEE,MAAO,QAAS0L,UAAW,SAAUC,WAAY,SAAhE,yEAIJ,kBAACzM,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,yBAAKA,UAAU,SACX,2BAAOA,UAAU,4BACb,2BAAOA,UAAU,8BAA8BsB,MAAO3B,KAAKP,MAAMmC,OAC7DC,SAAU,SAAC/C,GAAQ,EAAKW,MAAMqC,eAAehD,EAAE2C,OAAOE,UAE1D,0BAAMtB,UAAU,uBACZ,0BAAMA,UAAU,kBAAhB,mBAGR,yBAAKA,UAAU,UACX,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,eAAeW,KAAK,QACrDC,QAASjB,KAAKP,MAAMsC,iBADxB,QAIA,kBAACjB,EAAA,EAAD,CAAQC,QAAQ,WAAWV,UAAU,uBAAuBW,KAAK,QAC7DC,QAASjB,KAAKP,MAAMuC,iBADxB,WAOZ,kBAACvB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWE,QAASjB,KAAKiM,eAAgB5L,UAAU,cAAc8M,WAAS,GACtF,8BAAM,kBAAC,KAAD,CAAMC,KAAMC,KAAgBrM,KAAM,EAAGK,MAAO,CAAEiM,KAAM,WAA1D,eAGR,kBAAC7M,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIR,UAAU,oDACzB,kBAACS,EAAA,EAAD,CAAQC,QAAQ,WAAWE,QAASjB,KAAK+M,aAAc1M,UAAU,cAAc8M,WAAS,GACpF,8BAAM,kBAAC,KAAD,CAAMC,KAAMG,KAAWvM,KAAM,EAAGK,MAAO,CAAEiM,KAAM,WAArD,mB,GAzEPrL,IAAMC,YAkFZC,eAAW6J,I,ikBCzEpBwB,G,2MAEFrN,MAAQ,CACJsN,UAAU,EACVnN,SAAU,EACVoN,aAAc,KACdnN,UAAWA,GACX2J,eAAgB,EAChBlC,WAAW,EACX8C,WAAW,EACX6C,cAAc,EACdC,UAAU,EACVlB,IAAK,I,EAoBT9M,WAAa,SAACG,GACV,EAAKuD,SAAS,CAAEmK,SAAU1N,K,EAI9BqL,oBAAsB,SAAC/H,GACnB,EAAKC,SAAS,CACVmK,UAAU,EACVnN,SAAU+C,EACVyH,WAAW,K,EAInB1K,sBAAwB,SAACD,GACrB,EAAKmD,SAAS,CAAEmK,SAAUtN,EAAMJ,U,EAGpCmB,YAAc,WACV,EAAKzB,MAAMC,QAAQC,KAAK,KACxB,EAAK2D,SAAS,CAAEhD,SAAU,EAAGmN,UAAU,K,EAG3ClD,mBAAqB,WACjB,EAAKjH,SAAS,CAAEhD,SAAU,EAAKH,MAAMG,SAAW,EAAGwK,WAAW,K,EAGlEN,mBAAqB,WACjB,EAAKlH,SAAS,CAAEhD,SAAU,EAAKH,MAAMG,SAAW,EAAGwK,WAAW,K,EAGlEG,iBAAmB,WACf,EAAK3H,SAAS,CAAEwH,WAAW,K,EAG/BR,gBAAkB,WAEd,EAAKhH,SAAS,CAAEhD,SAAU,K,EAG9BoK,kBAAoB,WAChB,IAAInK,EAAY,EAAKJ,MAAMI,UACvBD,EAAWC,EAAU,EAAKJ,MAAMG,UACpCA,EAAS6C,OAAS7C,EAASoH,cAC3B,EAAKpE,SAAS,CAAE/C,e,EAGpBkK,kB,sBAAoB,kCAAA3G,EAAA,6DAEhB,EAAKR,SAAS,CAAE0E,WAAW,IACV,+DACb6F,EADa,+DACW,oBAAgB,EAAK1N,MAAMG,UACnD6C,EAAS,CACT,UAAa,QACb,MAAS,CACL,EAAK,EAAKhD,MAAMI,UAAU,EAAKJ,MAAMG,UAAUwL,UAEnD,SAAY,CACR,EAAK,EAAK3L,MAAMI,UAAU,EAAKJ,MAAMG,UAAU6C,OAAS,EAAKhD,MAAMI,UAAU,EAAKJ,MAAMG,UAAUyL,YAEtG,OAAU,CACN,EAAI,sCAdI,kBAkBuB+B,IAAMC,KAAKF,EAAX,MAA6B1K,GAAU,CACtE6K,QAAS,CACLC,OAAQ,sBApBJ,OAkBNC,EAlBM,OAuBZrB,QAAQC,IAAIoB,IACR3N,EAAY,EAAKJ,MAAMI,WACjB,EAAKJ,MAAMG,UAAU+H,UAAY6F,EAAIC,KAAKC,WACpD7N,EAAU,EAAKJ,MAAMG,UAAUmH,aAAeyG,EAAIC,KAAKE,aACvD9N,EAAU,EAAKJ,MAAMG,UAAUqI,YAAYhJ,KAAK,CAC5C2O,KAAMJ,EAAIC,KAAKC,WACfjF,WAAY5I,EAAU,EAAKJ,MAAMG,UAAU6C,OAC3CkG,aAAc6E,EAAIC,KAAKE,eAG3B,EAAK/K,SAAS,CAAE/C,UAAWA,IACvB,EAAKJ,MAAMyN,UACX,EAAK7L,kBAnCG,kDAsCZ8K,QAAQD,MAAR,MAtCY,yBAwCZ,EAAKtJ,SAAS,CAAE0E,WAAW,EAAO8C,WAAW,IAxCjC,6E,EA6CpB/I,gBAAkB,WACd,IAAM0E,EAAO,EAAKtG,MAAMuM,IACpByB,EAAO,CACP5N,UAAW,EAAKJ,MAAMI,UACtBgO,OAAQ9H,EACRyD,eAAgB,EAAK/J,MAAM+J,eAC3BsE,gBAAiB,EAAKrO,MAAMG,UAEhCgC,EAAYmM,WAAWC,IAAvB,oBAAwCjI,IAAQkI,OAAOR,GACvDtB,QAAQC,IAAI,4B,EAGhB9K,gBAAkB,WACd,IAAMyE,EAAO,EAAKtG,MAAMuM,IACfpK,EAAYmM,WAAWC,IAAvB,oBAAwCjI,IAC9CmI,KAAK,SAASrC,MAAK,SAACsC,GACnB,IAAMV,EAAOU,EAASC,MACtB,GAAa,OAATX,EAAe,CAEf,IADA,IAAI5N,EAA6BrB,OAAO6P,OAAOZ,EAAK5N,WACpD,MAAcA,EAAd,eAAyB,CAApB,IAAIoH,EAAC,KACFA,EAAEgB,cAAehB,EAAEgB,YAAczJ,OAAO6P,OAAOpH,EAAEgB,cAEzD,EAAKrF,SAAS,CACV/C,UAAWA,EACX2J,eAAgBiE,EAAKjE,eACrB5J,SAAU6N,EAAKK,kBAGnB,EAAKlL,SAAS,CACVqK,cAAc,EACdF,UAAU,QAGnBd,OAAM,SAAAqC,GACLnC,QAAQD,MAAMoC,O,EAItB7N,YAAc,WAEV,GAAW,UADA8N,OAAO,yBACE,CAChB,IAAM1O,EAAY,EAAKJ,MAAMI,UAC7BA,EAAU2O,SAAQ,SAAAvH,GACdA,EAAEU,WAAY,KAElB,EAAK5I,MAAMC,QAAQC,KAAK,KACxB,EAAK2D,SAAS,CACV/C,UAAWA,EACXD,SAAU,EACVmN,UAAU,M,EAKtB9J,eAAiB,SAACyK,GACd,IAAI7N,EAAY,EAAKJ,MAAMI,UAC3BA,EAAU,EAAKJ,MAAMG,UAAU+H,UAAY+F,EAC3C,EAAK9K,SAAS,CAAE/C,UAAWA,K,mFArKJ,IAAD,OACtB+B,EAAY+J,OAAO8C,oBAAmB,SAAA1C,GAClC,GAAIA,EAAM,CACN,IAAI2C,EAAc9M,EAAY+J,OAAOgD,YACjB,OAAhBD,GACA,EAAK9L,SAAS,CACVoJ,IAAK0C,EAAY1C,IACjB4C,SAAUF,EAAYG,YACtB3B,UAAU,SAIlB,EAAKtK,SAAS,CAAEsK,UAAU,S,+BA4J5B,IAAD,OACClF,EAAQ1I,KAAKG,MAAMG,SACzB,OACI,yBAAKD,UAAU,OACX,kBAAC,EAAD,CAAYJ,KAAMD,KAAKG,MAAMsN,SAAU7N,WAAYI,KAAKJ,WACpDQ,sBAAuBJ,KAAKI,sBAC5BgL,oBAAqBpL,KAAKoL,oBAC1BlK,YAAalB,KAAKkB,YAClBX,UAAWP,KAAKG,MAAMI,UACtBD,SAAUoI,EACVvH,YAAanB,KAAKmB,YAClBY,gBAAiB/B,KAAK+B,gBACtBC,gBAAiBhC,KAAKgC,gBACtBJ,OAAQ5B,KAAKG,MAAMuM,IACnB5K,eAAgB,SAAC2E,GAAW,EAAKnD,SAAS,CAAEoJ,IAAKjG,OAErD,kBAACmB,EAAA,EAAD,CAAWgB,OAAK,EAACvI,UAAU,mEACvB3B,GAAG,aAEH,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8Q,OAAK,EAACpC,KAAK,IACdqC,OAAQ,SAAChQ,GAAD,OAAW,kBAAC,GAAD,iBAAuBA,EAAvB,CAA8Bc,UAAW,EAAKJ,MAAMI,UACnED,SAAUoI,EAAOxH,YAAa,EAAKA,YACnCgJ,eAAgB,EAAK/J,MAAM+J,eAC3BI,gBAAiB,EAAKA,gBACtBQ,UAAW,EAAK3K,MAAM2K,UACtBP,mBAAoB,EAAKA,mBACzBC,mBAAoB,EAAKA,mBACzBC,kBAAmB,EAAKA,kBACxBC,kBAAmB,EAAKA,kBACxB/G,eAAgB,EAAKA,eACrBqE,UAAW,EAAK7H,MAAM6H,UACtBiD,iBAAkB,EAAKA,iBACvBG,oBAAqB,EAAKA,oBAC1BhB,UAAW,EAAKrI,gBAChBoI,uBAAwB,SAACuF,GAAQ,EAAKpM,SAAS,CAAE4G,eAAgBwF,WAGzE,kBAAC,IAAD,CAAOF,OAAK,EAACpC,KAAK,QAAQqC,OAAQ,SAAChQ,GAAD,OAAW,kBAAC,GAAD,iBAAYA,EAAZ,CACzCsC,gBAAiB,EAAKA,gBACtBC,gBAAiB,EAAKA,gBACtBJ,OAAQ,EAAKzB,MAAMuM,IACnB5K,eAAgB,SAAC2E,GAAW,EAAKnD,SAAS,CAAEoJ,IAAKjG,YAGzD,kBAACkJ,EAAA,EAAD,CAAUC,aAAc,CAAEC,WAAY,QAASC,SAAU,UACrD7P,KAAMD,KAAKG,MAAMwN,aACjBoC,iBAAkB,IAClB/E,QAAS,WAAQ,EAAK1H,SAAS,CAAEqK,cAAc,KAC/CqC,QAAS,0BAAMtR,GAAG,cAAT,yCACTuR,OACI,kBAACC,EAAA,EAAD,CACI5K,IAAI,QACJ/D,MAAM,UACNN,QAAS,WAAQ,EAAKqC,SAAS,CAAEqK,cAAc,MAE/C,kBAAC,IAAD,OAGRwC,oBAAqB,SAAC1Q,GAAY,OAAO,kBAAC2Q,EAAA,EAAD,iBAAW3Q,EAAX,CAAkB4Q,UAAU,iB,GAlP3EnO,aA2PHC,eAAWqL,IC3QN8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASlB,OACL,kBAAC,IAAD,KACI,kBAAC,GAAD,OAEFmB,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzE,MAAK,SAAA0E,GACjCA,EAAaC,kB","file":"static/js/main.5586ce84.chunk.js","sourcesContent":["var map = {\n\t\"./Binary_Property/ASCII.js\": 279,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 280,\n\t\"./Binary_Property/Alphabetic.js\": 281,\n\t\"./Binary_Property/Any.js\": 282,\n\t\"./Binary_Property/Assigned.js\": 283,\n\t\"./Binary_Property/Bidi_Control.js\": 284,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 285,\n\t\"./Binary_Property/Case_Ignorable.js\": 286,\n\t\"./Binary_Property/Cased.js\": 287,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 288,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 289,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 290,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 291,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 292,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 293,\n\t\"./Binary_Property/Dash.js\": 294,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 295,\n\t\"./Binary_Property/Deprecated.js\": 296,\n\t\"./Binary_Property/Diacritic.js\": 297,\n\t\"./Binary_Property/Emoji.js\": 298,\n\t\"./Binary_Property/Emoji_Component.js\": 299,\n\t\"./Binary_Property/Emoji_Modifier.js\": 300,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 301,\n\t\"./Binary_Property/Emoji_Presentation.js\": 302,\n\t\"./Binary_Property/Extended_Pictographic.js\": 303,\n\t\"./Binary_Property/Extender.js\": 304,\n\t\"./Binary_Property/Grapheme_Base.js\": 305,\n\t\"./Binary_Property/Grapheme_Extend.js\": 306,\n\t\"./Binary_Property/Hex_Digit.js\": 307,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 308,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 309,\n\t\"./Binary_Property/ID_Continue.js\": 310,\n\t\"./Binary_Property/ID_Start.js\": 311,\n\t\"./Binary_Property/Ideographic.js\": 312,\n\t\"./Binary_Property/Join_Control.js\": 313,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 314,\n\t\"./Binary_Property/Lowercase.js\": 315,\n\t\"./Binary_Property/Math.js\": 316,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 317,\n\t\"./Binary_Property/Pattern_Syntax.js\": 318,\n\t\"./Binary_Property/Pattern_White_Space.js\": 319,\n\t\"./Binary_Property/Quotation_Mark.js\": 320,\n\t\"./Binary_Property/Radical.js\": 321,\n\t\"./Binary_Property/Regional_Indicator.js\": 322,\n\t\"./Binary_Property/Sentence_Terminal.js\": 323,\n\t\"./Binary_Property/Soft_Dotted.js\": 324,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 325,\n\t\"./Binary_Property/Unified_Ideograph.js\": 326,\n\t\"./Binary_Property/Uppercase.js\": 327,\n\t\"./Binary_Property/Variation_Selector.js\": 328,\n\t\"./Binary_Property/White_Space.js\": 329,\n\t\"./Binary_Property/XID_Continue.js\": 330,\n\t\"./Binary_Property/XID_Start.js\": 331,\n\t\"./General_Category/Cased_Letter.js\": 332,\n\t\"./General_Category/Close_Punctuation.js\": 333,\n\t\"./General_Category/Connector_Punctuation.js\": 334,\n\t\"./General_Category/Control.js\": 335,\n\t\"./General_Category/Currency_Symbol.js\": 336,\n\t\"./General_Category/Dash_Punctuation.js\": 337,\n\t\"./General_Category/Decimal_Number.js\": 338,\n\t\"./General_Category/Enclosing_Mark.js\": 339,\n\t\"./General_Category/Final_Punctuation.js\": 340,\n\t\"./General_Category/Format.js\": 341,\n\t\"./General_Category/Initial_Punctuation.js\": 342,\n\t\"./General_Category/Letter.js\": 343,\n\t\"./General_Category/Letter_Number.js\": 344,\n\t\"./General_Category/Line_Separator.js\": 345,\n\t\"./General_Category/Lowercase_Letter.js\": 346,\n\t\"./General_Category/Mark.js\": 347,\n\t\"./General_Category/Math_Symbol.js\": 348,\n\t\"./General_Category/Modifier_Letter.js\": 349,\n\t\"./General_Category/Modifier_Symbol.js\": 350,\n\t\"./General_Category/Nonspacing_Mark.js\": 351,\n\t\"./General_Category/Number.js\": 352,\n\t\"./General_Category/Open_Punctuation.js\": 353,\n\t\"./General_Category/Other.js\": 354,\n\t\"./General_Category/Other_Letter.js\": 355,\n\t\"./General_Category/Other_Number.js\": 356,\n\t\"./General_Category/Other_Punctuation.js\": 357,\n\t\"./General_Category/Other_Symbol.js\": 358,\n\t\"./General_Category/Paragraph_Separator.js\": 359,\n\t\"./General_Category/Private_Use.js\": 360,\n\t\"./General_Category/Punctuation.js\": 361,\n\t\"./General_Category/Separator.js\": 362,\n\t\"./General_Category/Space_Separator.js\": 363,\n\t\"./General_Category/Spacing_Mark.js\": 364,\n\t\"./General_Category/Surrogate.js\": 365,\n\t\"./General_Category/Symbol.js\": 366,\n\t\"./General_Category/Titlecase_Letter.js\": 367,\n\t\"./General_Category/Unassigned.js\": 368,\n\t\"./General_Category/Uppercase_Letter.js\": 369,\n\t\"./Script/Adlam.js\": 370,\n\t\"./Script/Ahom.js\": 371,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 372,\n\t\"./Script/Arabic.js\": 373,\n\t\"./Script/Armenian.js\": 374,\n\t\"./Script/Avestan.js\": 375,\n\t\"./Script/Balinese.js\": 376,\n\t\"./Script/Bamum.js\": 377,\n\t\"./Script/Bassa_Vah.js\": 378,\n\t\"./Script/Batak.js\": 379,\n\t\"./Script/Bengali.js\": 380,\n\t\"./Script/Bhaiksuki.js\": 381,\n\t\"./Script/Bopomofo.js\": 382,\n\t\"./Script/Brahmi.js\": 383,\n\t\"./Script/Braille.js\": 384,\n\t\"./Script/Buginese.js\": 385,\n\t\"./Script/Buhid.js\": 386,\n\t\"./Script/Canadian_Aboriginal.js\": 387,\n\t\"./Script/Carian.js\": 388,\n\t\"./Script/Caucasian_Albanian.js\": 389,\n\t\"./Script/Chakma.js\": 390,\n\t\"./Script/Cham.js\": 391,\n\t\"./Script/Cherokee.js\": 392,\n\t\"./Script/Common.js\": 393,\n\t\"./Script/Coptic.js\": 394,\n\t\"./Script/Cuneiform.js\": 395,\n\t\"./Script/Cypriot.js\": 396,\n\t\"./Script/Cyrillic.js\": 397,\n\t\"./Script/Deseret.js\": 398,\n\t\"./Script/Devanagari.js\": 399,\n\t\"./Script/Dogra.js\": 400,\n\t\"./Script/Duployan.js\": 401,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 402,\n\t\"./Script/Elbasan.js\": 403,\n\t\"./Script/Elymaic.js\": 404,\n\t\"./Script/Ethiopic.js\": 405,\n\t\"./Script/Georgian.js\": 406,\n\t\"./Script/Glagolitic.js\": 407,\n\t\"./Script/Gothic.js\": 408,\n\t\"./Script/Grantha.js\": 409,\n\t\"./Script/Greek.js\": 410,\n\t\"./Script/Gujarati.js\": 411,\n\t\"./Script/Gunjala_Gondi.js\": 412,\n\t\"./Script/Gurmukhi.js\": 413,\n\t\"./Script/Han.js\": 414,\n\t\"./Script/Hangul.js\": 415,\n\t\"./Script/Hanifi_Rohingya.js\": 416,\n\t\"./Script/Hanunoo.js\": 417,\n\t\"./Script/Hatran.js\": 418,\n\t\"./Script/Hebrew.js\": 419,\n\t\"./Script/Hiragana.js\": 420,\n\t\"./Script/Imperial_Aramaic.js\": 421,\n\t\"./Script/Inherited.js\": 422,\n\t\"./Script/Inscriptional_Pahlavi.js\": 423,\n\t\"./Script/Inscriptional_Parthian.js\": 424,\n\t\"./Script/Javanese.js\": 425,\n\t\"./Script/Kaithi.js\": 426,\n\t\"./Script/Kannada.js\": 427,\n\t\"./Script/Katakana.js\": 428,\n\t\"./Script/Kayah_Li.js\": 429,\n\t\"./Script/Kharoshthi.js\": 430,\n\t\"./Script/Khmer.js\": 431,\n\t\"./Script/Khojki.js\": 432,\n\t\"./Script/Khudawadi.js\": 433,\n\t\"./Script/Lao.js\": 434,\n\t\"./Script/Latin.js\": 435,\n\t\"./Script/Lepcha.js\": 436,\n\t\"./Script/Limbu.js\": 437,\n\t\"./Script/Linear_A.js\": 438,\n\t\"./Script/Linear_B.js\": 439,\n\t\"./Script/Lisu.js\": 440,\n\t\"./Script/Lycian.js\": 441,\n\t\"./Script/Lydian.js\": 442,\n\t\"./Script/Mahajani.js\": 443,\n\t\"./Script/Makasar.js\": 444,\n\t\"./Script/Malayalam.js\": 445,\n\t\"./Script/Mandaic.js\": 446,\n\t\"./Script/Manichaean.js\": 447,\n\t\"./Script/Marchen.js\": 448,\n\t\"./Script/Masaram_Gondi.js\": 449,\n\t\"./Script/Medefaidrin.js\": 450,\n\t\"./Script/Meetei_Mayek.js\": 451,\n\t\"./Script/Mende_Kikakui.js\": 452,\n\t\"./Script/Meroitic_Cursive.js\": 453,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 454,\n\t\"./Script/Miao.js\": 455,\n\t\"./Script/Modi.js\": 456,\n\t\"./Script/Mongolian.js\": 457,\n\t\"./Script/Mro.js\": 458,\n\t\"./Script/Multani.js\": 459,\n\t\"./Script/Myanmar.js\": 460,\n\t\"./Script/Nabataean.js\": 461,\n\t\"./Script/Nandinagari.js\": 462,\n\t\"./Script/New_Tai_Lue.js\": 463,\n\t\"./Script/Newa.js\": 464,\n\t\"./Script/Nko.js\": 465,\n\t\"./Script/Nushu.js\": 466,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 467,\n\t\"./Script/Ogham.js\": 468,\n\t\"./Script/Ol_Chiki.js\": 469,\n\t\"./Script/Old_Hungarian.js\": 470,\n\t\"./Script/Old_Italic.js\": 471,\n\t\"./Script/Old_North_Arabian.js\": 472,\n\t\"./Script/Old_Permic.js\": 473,\n\t\"./Script/Old_Persian.js\": 474,\n\t\"./Script/Old_Sogdian.js\": 475,\n\t\"./Script/Old_South_Arabian.js\": 476,\n\t\"./Script/Old_Turkic.js\": 477,\n\t\"./Script/Oriya.js\": 478,\n\t\"./Script/Osage.js\": 479,\n\t\"./Script/Osmanya.js\": 480,\n\t\"./Script/Pahawh_Hmong.js\": 481,\n\t\"./Script/Palmyrene.js\": 482,\n\t\"./Script/Pau_Cin_Hau.js\": 483,\n\t\"./Script/Phags_Pa.js\": 484,\n\t\"./Script/Phoenician.js\": 485,\n\t\"./Script/Psalter_Pahlavi.js\": 486,\n\t\"./Script/Rejang.js\": 487,\n\t\"./Script/Runic.js\": 488,\n\t\"./Script/Samaritan.js\": 489,\n\t\"./Script/Saurashtra.js\": 490,\n\t\"./Script/Sharada.js\": 491,\n\t\"./Script/Shavian.js\": 492,\n\t\"./Script/Siddham.js\": 493,\n\t\"./Script/SignWriting.js\": 494,\n\t\"./Script/Sinhala.js\": 495,\n\t\"./Script/Sogdian.js\": 496,\n\t\"./Script/Sora_Sompeng.js\": 497,\n\t\"./Script/Soyombo.js\": 498,\n\t\"./Script/Sundanese.js\": 499,\n\t\"./Script/Syloti_Nagri.js\": 500,\n\t\"./Script/Syriac.js\": 501,\n\t\"./Script/Tagalog.js\": 502,\n\t\"./Script/Tagbanwa.js\": 503,\n\t\"./Script/Tai_Le.js\": 504,\n\t\"./Script/Tai_Tham.js\": 505,\n\t\"./Script/Tai_Viet.js\": 506,\n\t\"./Script/Takri.js\": 507,\n\t\"./Script/Tamil.js\": 508,\n\t\"./Script/Tangut.js\": 509,\n\t\"./Script/Telugu.js\": 510,\n\t\"./Script/Thaana.js\": 511,\n\t\"./Script/Thai.js\": 512,\n\t\"./Script/Tibetan.js\": 513,\n\t\"./Script/Tifinagh.js\": 514,\n\t\"./Script/Tirhuta.js\": 515,\n\t\"./Script/Ugaritic.js\": 516,\n\t\"./Script/Vai.js\": 517,\n\t\"./Script/Wancho.js\": 518,\n\t\"./Script/Warang_Citi.js\": 519,\n\t\"./Script/Yi.js\": 520,\n\t\"./Script/Zanabazar_Square.js\": 521,\n\t\"./Script_Extensions/Adlam.js\": 522,\n\t\"./Script_Extensions/Ahom.js\": 523,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 524,\n\t\"./Script_Extensions/Arabic.js\": 525,\n\t\"./Script_Extensions/Armenian.js\": 526,\n\t\"./Script_Extensions/Avestan.js\": 527,\n\t\"./Script_Extensions/Balinese.js\": 528,\n\t\"./Script_Extensions/Bamum.js\": 529,\n\t\"./Script_Extensions/Bassa_Vah.js\": 530,\n\t\"./Script_Extensions/Batak.js\": 531,\n\t\"./Script_Extensions/Bengali.js\": 532,\n\t\"./Script_Extensions/Bhaiksuki.js\": 533,\n\t\"./Script_Extensions/Bopomofo.js\": 534,\n\t\"./Script_Extensions/Brahmi.js\": 535,\n\t\"./Script_Extensions/Braille.js\": 536,\n\t\"./Script_Extensions/Buginese.js\": 537,\n\t\"./Script_Extensions/Buhid.js\": 538,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 539,\n\t\"./Script_Extensions/Carian.js\": 540,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 541,\n\t\"./Script_Extensions/Chakma.js\": 542,\n\t\"./Script_Extensions/Cham.js\": 543,\n\t\"./Script_Extensions/Cherokee.js\": 544,\n\t\"./Script_Extensions/Common.js\": 545,\n\t\"./Script_Extensions/Coptic.js\": 546,\n\t\"./Script_Extensions/Cuneiform.js\": 547,\n\t\"./Script_Extensions/Cypriot.js\": 548,\n\t\"./Script_Extensions/Cyrillic.js\": 549,\n\t\"./Script_Extensions/Deseret.js\": 550,\n\t\"./Script_Extensions/Devanagari.js\": 551,\n\t\"./Script_Extensions/Dogra.js\": 552,\n\t\"./Script_Extensions/Duployan.js\": 553,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 554,\n\t\"./Script_Extensions/Elbasan.js\": 555,\n\t\"./Script_Extensions/Elymaic.js\": 556,\n\t\"./Script_Extensions/Ethiopic.js\": 557,\n\t\"./Script_Extensions/Georgian.js\": 558,\n\t\"./Script_Extensions/Glagolitic.js\": 559,\n\t\"./Script_Extensions/Gothic.js\": 560,\n\t\"./Script_Extensions/Grantha.js\": 561,\n\t\"./Script_Extensions/Greek.js\": 562,\n\t\"./Script_Extensions/Gujarati.js\": 563,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 564,\n\t\"./Script_Extensions/Gurmukhi.js\": 565,\n\t\"./Script_Extensions/Han.js\": 566,\n\t\"./Script_Extensions/Hangul.js\": 567,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 568,\n\t\"./Script_Extensions/Hanunoo.js\": 569,\n\t\"./Script_Extensions/Hatran.js\": 570,\n\t\"./Script_Extensions/Hebrew.js\": 571,\n\t\"./Script_Extensions/Hiragana.js\": 572,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 573,\n\t\"./Script_Extensions/Inherited.js\": 574,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 575,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 576,\n\t\"./Script_Extensions/Javanese.js\": 577,\n\t\"./Script_Extensions/Kaithi.js\": 578,\n\t\"./Script_Extensions/Kannada.js\": 579,\n\t\"./Script_Extensions/Katakana.js\": 580,\n\t\"./Script_Extensions/Kayah_Li.js\": 581,\n\t\"./Script_Extensions/Kharoshthi.js\": 582,\n\t\"./Script_Extensions/Khmer.js\": 583,\n\t\"./Script_Extensions/Khojki.js\": 584,\n\t\"./Script_Extensions/Khudawadi.js\": 585,\n\t\"./Script_Extensions/Lao.js\": 586,\n\t\"./Script_Extensions/Latin.js\": 587,\n\t\"./Script_Extensions/Lepcha.js\": 588,\n\t\"./Script_Extensions/Limbu.js\": 589,\n\t\"./Script_Extensions/Linear_A.js\": 590,\n\t\"./Script_Extensions/Linear_B.js\": 591,\n\t\"./Script_Extensions/Lisu.js\": 592,\n\t\"./Script_Extensions/Lycian.js\": 593,\n\t\"./Script_Extensions/Lydian.js\": 594,\n\t\"./Script_Extensions/Mahajani.js\": 595,\n\t\"./Script_Extensions/Makasar.js\": 596,\n\t\"./Script_Extensions/Malayalam.js\": 597,\n\t\"./Script_Extensions/Mandaic.js\": 598,\n\t\"./Script_Extensions/Manichaean.js\": 599,\n\t\"./Script_Extensions/Marchen.js\": 600,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 601,\n\t\"./Script_Extensions/Medefaidrin.js\": 602,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 603,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 604,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 605,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 606,\n\t\"./Script_Extensions/Miao.js\": 607,\n\t\"./Script_Extensions/Modi.js\": 608,\n\t\"./Script_Extensions/Mongolian.js\": 609,\n\t\"./Script_Extensions/Mro.js\": 610,\n\t\"./Script_Extensions/Multani.js\": 611,\n\t\"./Script_Extensions/Myanmar.js\": 612,\n\t\"./Script_Extensions/Nabataean.js\": 613,\n\t\"./Script_Extensions/Nandinagari.js\": 614,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 615,\n\t\"./Script_Extensions/Newa.js\": 616,\n\t\"./Script_Extensions/Nko.js\": 617,\n\t\"./Script_Extensions/Nushu.js\": 618,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 619,\n\t\"./Script_Extensions/Ogham.js\": 620,\n\t\"./Script_Extensions/Ol_Chiki.js\": 621,\n\t\"./Script_Extensions/Old_Hungarian.js\": 622,\n\t\"./Script_Extensions/Old_Italic.js\": 623,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 624,\n\t\"./Script_Extensions/Old_Permic.js\": 625,\n\t\"./Script_Extensions/Old_Persian.js\": 626,\n\t\"./Script_Extensions/Old_Sogdian.js\": 627,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 628,\n\t\"./Script_Extensions/Old_Turkic.js\": 629,\n\t\"./Script_Extensions/Oriya.js\": 630,\n\t\"./Script_Extensions/Osage.js\": 631,\n\t\"./Script_Extensions/Osmanya.js\": 632,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 633,\n\t\"./Script_Extensions/Palmyrene.js\": 634,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 635,\n\t\"./Script_Extensions/Phags_Pa.js\": 636,\n\t\"./Script_Extensions/Phoenician.js\": 637,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 638,\n\t\"./Script_Extensions/Rejang.js\": 639,\n\t\"./Script_Extensions/Runic.js\": 640,\n\t\"./Script_Extensions/Samaritan.js\": 641,\n\t\"./Script_Extensions/Saurashtra.js\": 642,\n\t\"./Script_Extensions/Sharada.js\": 643,\n\t\"./Script_Extensions/Shavian.js\": 644,\n\t\"./Script_Extensions/Siddham.js\": 645,\n\t\"./Script_Extensions/SignWriting.js\": 646,\n\t\"./Script_Extensions/Sinhala.js\": 647,\n\t\"./Script_Extensions/Sogdian.js\": 648,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 649,\n\t\"./Script_Extensions/Soyombo.js\": 650,\n\t\"./Script_Extensions/Sundanese.js\": 651,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 652,\n\t\"./Script_Extensions/Syriac.js\": 653,\n\t\"./Script_Extensions/Tagalog.js\": 654,\n\t\"./Script_Extensions/Tagbanwa.js\": 655,\n\t\"./Script_Extensions/Tai_Le.js\": 656,\n\t\"./Script_Extensions/Tai_Tham.js\": 657,\n\t\"./Script_Extensions/Tai_Viet.js\": 658,\n\t\"./Script_Extensions/Takri.js\": 659,\n\t\"./Script_Extensions/Tamil.js\": 660,\n\t\"./Script_Extensions/Tangut.js\": 661,\n\t\"./Script_Extensions/Telugu.js\": 662,\n\t\"./Script_Extensions/Thaana.js\": 663,\n\t\"./Script_Extensions/Thai.js\": 664,\n\t\"./Script_Extensions/Tibetan.js\": 665,\n\t\"./Script_Extensions/Tifinagh.js\": 666,\n\t\"./Script_Extensions/Tirhuta.js\": 667,\n\t\"./Script_Extensions/Ugaritic.js\": 668,\n\t\"./Script_Extensions/Vai.js\": 669,\n\t\"./Script_Extensions/Wancho.js\": 670,\n\t\"./Script_Extensions/Warang_Citi.js\": 671,\n\t\"./Script_Extensions/Yi.js\": 672,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 673,\n\t\"./index.js\": 674,\n\t\"./unicode-version.js\": 675\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 278;","import React from 'react';\r\nimport './Question.css';\r\nimport AceEditor from \"react-ace\";\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/monokai';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Container, Col, Row, OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport HelpIcon from '@material-ui/icons/HelpOutline';\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {\r\n    LiveProvider,\r\n    LiveEditor,\r\n    LiveError,\r\n    LivePreview\r\n} from 'react-live';\r\n\r\n\r\nexport interface QuestionIface {\r\n    questionTitle: string,\r\n    questionTutorial: string,\r\n    questionText: string | string[],\r\n    hint: string,\r\n    answer: string | number | number[],\r\n    defaultAnswer: string | number | number[],\r\n    feedbackText: string,\r\n    completed: boolean,\r\n    type: QuestionType,\r\n    testCode: string,\r\n    exportCode: string,\r\n    pastAnswers: pastAnswerIface[],\r\n}\r\n\r\nexport interface pastAnswerIface {\r\n    pass: boolean,\r\n    pastAnswer: string | number | number[],\r\n    errorMessage: string,\r\n}\r\n\r\nexport enum QuestionType {\r\n    EditableCode, // qn with editable code that can run\r\n    MultipleChoice, // mcq\r\n    Checkboxes, // select all that applies\r\n    HTMLCode\r\n}\r\n\r\nfunction TabPanel(props: any) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            style={{maxWidth: '100%', height: '100%'}}\r\n            {...other}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype MyProps = {\r\n    lastQuestion: boolean,\r\n    isLoading: boolean,\r\n    index: number,\r\n    question: QuestionIface,\r\n    nextQuestion: () => void,\r\n    prevQuestion: () => void,\r\n    checkAnswer: () => void,\r\n    resetAnswer: () => void,\r\n    toggleComplete: (arg0: boolean) => void,\r\n};\r\n\r\nclass Question extends React.Component<MyProps, { selected: Set<number>, view: number, mcqSelected: number }> {\r\n    constructor(props: MyProps) {\r\n        super(props);\r\n        this.state = {\r\n            selected: new Set(),\r\n            view: 0,\r\n            mcqSelected: 0,\r\n        };\r\n    }\r\n\r\n    handleAnswerChange = (newValue: string) => {\r\n        this.props.question.answer = newValue;\r\n    };\r\n\r\n    checkMCQAns = (i: number) => {\r\n        this.props.question.answer = `x = ${i}`;\r\n        this.setState({mcqSelected: i})\r\n        // this.props.toggleComplete(i === (this.props.question.answer as number));\r\n    };\r\n\r\n    checkCheckboxesAns = () => {\r\n        const expected = new Set(this.props.question.answer as number[]);\r\n        this.props.toggleComplete(eqSet(expected, this.state.selected));\r\n    };\r\n\r\n    handleClickQuestionView = (e: any, i: number) => {\r\n        this.setState({\r\n            view: i,\r\n        });\r\n    };\r\n\r\n    handleCheckboxAnsChange = (event: any, i: number) => {\r\n        let selected = this.state.selected;\r\n        if (event.target.checked) {\r\n            selected.add(i);\r\n        } else {\r\n            selected.delete(i);\r\n        }\r\n        this.setState({selected: selected});\r\n    };\r\n\r\n    renderQuestion = () => {\r\n        switch (this.props.question.type) {\r\n            case QuestionType.EditableCode:\r\n                return this.renderEditableCode();\r\n            case QuestionType.MultipleChoice:\r\n                return this.renderMCQ();\r\n            case QuestionType.Checkboxes:\r\n                return this.renderCheckboxes();\r\n            case QuestionType.HTMLCode:\r\n                return this.renderHtmlCode();\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    renderCheckboxes = () => {\r\n        const qn = this.props.question.questionText as string[];\r\n        let options = [];\r\n        for (let i = 1; i < qn.length; i++) {\r\n            options.push(\r\n                <label key={i}>\r\n                    {qn[i]}\r\n                    <input type='checkbox' onChange={(e) => this.handleCheckboxAnsChange(e, i)}/>\r\n                    <br/>\r\n                </label>\r\n            )\r\n        }\r\n        return (\r\n            <Row className='w-100'>\r\n                <div><p className='question-instruction'><strong>{qn[0]}</strong></p></div>\r\n                <div>{options}</div>\r\n                <Button className='button-start' onClick={this.checkCheckboxesAns}> Check answer </Button>\r\n            </Row>\r\n        )\r\n    };\r\n\r\n    renderMCQ = () => {\r\n        const qn = this.props.question.questionText as string[];\r\n        let selection = [];\r\n        for (let i = 1; i < qn.length; i++) {\r\n            const text = qn[i];\r\n            selection.push(\r\n                <div onClick={() => this.checkMCQAns(i)} key={i}\r\n                     className={`mcq-button ${this.state.mcqSelected === i ? 'selected-mcq' : ''\r\n                     }`}\r\n                     style={{height: `${90 / (qn.length - 1)}%`, margin: `${10 / (qn.length - 1)}% 0px`}}\r\n                >\r\n                    {text.split('\\n').map(function (item, key) {\r\n                        return (\r\n                            <p key={key} className='mcq-button-font'>\r\n                                {item}\r\n                            </p>)\r\n                    })}\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <Row className='w-100' style={{height: '50vh'}}>\r\n                <Col xs={6}>\r\n                    <div className='d-flex align-items-center ' style={{marginBottom: 10}}>\r\n                        <p className='question-instruction'><strong>{this.props.question.questionTutorial}</strong></p>\r\n                        <div className='ml-auto' style={{marginRight: 10}}>\r\n                            <OverlayTrigger\r\n                                key='bottom'\r\n                                placement='bottom'\r\n                                overlay={\r\n                                    <Tooltip id='hint'>\r\n                                        {this.props.question.hint}\r\n                                    </Tooltip>\r\n                                }\r\n                            >\r\n                                <HelpIcon/>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                    <AceEditor\r\n                        wrapEnabled\r\n                        height='90%'\r\n                        width='100%'\r\n                        mode=\"javascript\"\r\n                        theme=\"monokai\"\r\n                        name=\"answerInput\"\r\n                        readOnly={true}\r\n                        tabSize={4}\r\n                        editorProps={{\r\n                            $blockScrolling: true,\r\n                        }}\r\n                        value={qn[0] as string}\r\n                    />\r\n                </Col>\r\n                <Col>\r\n                    {selection}\r\n                </Col>\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    renderEditableCode = () => {\r\n        return (\r\n            <Row className='w-100' style={{height: '50vh'}}>\r\n                <Col xs={6} style={{height: '100%'}} className='question-container'>\r\n                    <Tabs\r\n                        value={this.state.view}\r\n                        onChange={this.handleClickQuestionView}\r\n                        textColor=\"primary\"\r\n                        variant='fullWidth'\r\n                        centered\r\n                        TabIndicatorProps={\r\n                            {\r\n                                className: 'active-tab',\r\n                            }\r\n                        }\r\n                    >\r\n                        <Tab label=\"Question\" value={0}/>\r\n                        <Tab label=\"Output\" value={1}/>\r\n                    </Tabs>\r\n                    <SwipeableViews\r\n                        index={this.state.view}\r\n                        onChangeIndex={this.handleClickQuestionView}\r\n                        className='w-100 h-100'\r\n                    >\r\n                        <TabPanel value={this.state.view} index={0}>\r\n                            <div style={{lineHeight: 1}}>\r\n                                <h6>Instructions:</h6>\r\n                                {this.props.question.questionTutorial.split('\\n').map(function (item, key) {\r\n                                    return (\r\n                                        <span key={key} className='question-font'>\r\n                                            {item}\r\n                                            <br/>\r\n                                        </span>)\r\n                                })}\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel value={this.state.view} index={1}>\r\n                            <Paper>\r\n                                <div\r\n                                    dangerouslySetInnerHTML={{__html: this.props.question.feedbackText}}/>\r\n                            </Paper>\r\n                        </TabPanel>\r\n\r\n                    </SwipeableViews>\r\n                </Col>\r\n                <Col xs={6} style={{height: '100%'}}>\r\n                    <div className='d-flex align-items-center ' style={{marginBottom: 10}}>\r\n                        <p className='question-instruction'><strong>{this.props.question.questionText}</strong></p>\r\n                        <div className='ml-auto' style={{marginRight: 10}}>\r\n                            <OverlayTrigger\r\n                                key='bottom'\r\n                                placement='bottom'\r\n                                overlay={\r\n                                    <Tooltip id='hint'>\r\n                                        {this.props.question.hint}\r\n                                    </Tooltip>\r\n                                }\r\n                            >\r\n                                <HelpIcon/>\r\n                            </OverlayTrigger>\r\n                        </div>\r\n                    </div>\r\n                    <AceEditor\r\n                        wrapEnabled\r\n                        height='90%'\r\n                        width='100%'\r\n                        mode=\"javascript\"\r\n                        theme=\"monokai\"\r\n                        name=\"answerInput\"\r\n                        onChange={this.handleAnswerChange}\r\n                        tabSize={4}\r\n                        editorProps={{\r\n                            $blockScrolling: true,\r\n                        }}\r\n                        value={this.props.question.answer as string}\r\n                    />\r\n                </Col>\r\n                {/*<div dangerouslySetInnerHTML={{ __html: this.props.question.feedbackText }} />*/}\r\n            </Row>\r\n        );\r\n    };\r\n\r\n    renderHtmlCode = () => {\r\n        return (\r\n            <LiveProvider code={this.props.question.defaultAnswer as string}>\r\n                <Row className='w-100' style={{height: '50vh'}}>\r\n                    <Col xs={6} style={{height: '100%'}} className='question-container'>\r\n                        <Tabs\r\n                            value={this.state.view}\r\n                            onChange={this.handleClickQuestionView}\r\n                            textColor=\"primary\"\r\n                            variant='fullWidth'\r\n                            centered\r\n                            TabIndicatorProps={\r\n                                {\r\n                                    className: 'active-tab',\r\n                                }\r\n                            }\r\n                        >\r\n                            <Tab label=\"Question\" value={0}/>\r\n                            <Tab label=\"Edit Code\" value={1}/>\r\n                        </Tabs>\r\n                        <SwipeableViews\r\n                            index={this.state.view}\r\n                            onChangeIndex={this.handleClickQuestionView}\r\n                            className='w-100 h-100'\r\n                        >\r\n                            <TabPanel value={this.state.view} index={0}>\r\n                                <div style={{lineHeight: 1}}>\r\n                                    <h6>Instructions:</h6>\r\n                                    {this.props.question.questionTutorial.split('\\n').map(function (item, key) {\r\n                                        return (\r\n                                            <span key={key} className='question-font'>\r\n                                            {item}\r\n                                                <br/>\r\n                                        </span>)\r\n                                    })}\r\n                                </div>\r\n                            </TabPanel>\r\n                            <TabPanel value={this.state.view} index={1}>\r\n                                <LiveEditor/>\r\n                            </TabPanel>\r\n                        </SwipeableViews>\r\n                    </Col>\r\n                    <Col xs={6} style={{height: '100%'}}>\r\n                        <div className='d-flex align-items-center ' style={{marginBottom: 10}}>\r\n                            <p className='question-instruction'><strong>{this.props.question.questionTutorial}</strong>\r\n                            </p>\r\n                            <div className='ml-auto' style={{marginRight: 10}}>\r\n                                <OverlayTrigger\r\n                                    key='bottom'\r\n                                    placement='bottom'\r\n                                    overlay={\r\n                                        <Tooltip id='hint'>\r\n                                            {this.props.question.hint}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <HelpIcon/>\r\n                                </OverlayTrigger>\r\n                            </div>\r\n                        </div>\r\n                        <Paper style={{height:'80%'}}>\r\n                            <LiveError/>\r\n                            <LivePreview/>\r\n                        </Paper>\r\n                    </Col>\r\n                </Row>\r\n            </LiveProvider>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const q = this.props.question;\r\n        return (\r\n            <Container className='d-flex align-items-center justify-content-center flex-column'>\r\n                {this.renderQuestion()}\r\n                <Row className='d-flex w-100'>\r\n                    <Button variant=\"outlined\" className='button-start' size='large'\r\n                            onClick={this.props.prevQuestion}>\r\n                        PREVIOUS\r\n                    </Button>\r\n                    <Button variant=\"outlined\" className='button-start' size='large'\r\n                            onClick={this.props.resetAnswer}\r\n                            style={{marginLeft: 10}}\r\n                    >\r\n                        RESET\r\n                    </Button>\r\n                    {this.props.isLoading ?\r\n                        <CircularProgress className='loading-color ml-auto'/>\r\n                        : <Button variant=\"outlined\" className='button-start ml-auto' size='large'\r\n                                  onClick={this.props.checkAnswer}\r\n                            // disabled={q.type !== QuestionType.EditableCode}\r\n                        >\r\n                            RUN\r\n                        </Button>}\r\n                    <Button variant=\"outlined\" className='button-start' size='large'\r\n                            onClick={this.props.nextQuestion} style={{marginLeft: 10}}\r\n                            disabled={!q.completed}\r\n                    >\r\n                        {this.props.lastQuestion ? \"Finish\" : 'NEXT'}\r\n                    </Button>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n// determines if 2 sets are equal. https://stackoverflow.com/a/31129384\r\nfunction eqSet(as: Set<any>, bs: Set<any>) {\r\n    if (as.size !== bs.size) return false;\r\n    for (var a of as) if (!bs.has(a)) return false;\r\n    return true;\r\n}\r\n\r\nexport default Question;\r\n\r\n","import Grid from \"@material-ui/core/Grid\";\r\nimport React from 'react';\r\nimport { push as Menu, State } from \"react-burger-menu\";\r\nimport './SliderMenu.css';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { QuestionIface } from \"../Form/Question\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\ntype MyProps = RouteComponentProps & {\r\n    open: boolean,\r\n    question: number,\r\n    questions: QuestionIface[],\r\n    userID: string\r\n    onUserIDChange: (userID: string) => void,\r\n    handleMenu: (arg0: boolean) => void,\r\n    handleClickQuestion: (arg0: number) => void,\r\n    handleMenuStateChange: (arg0: State) => void,\r\n    handleSaveState: () => void,\r\n    handleLoadState: () => void,\r\n    handleStart: () => void,\r\n    toggleAdmin: () => void,\r\n};\r\n\r\nclass SliderMenu extends React.Component<MyProps, {}> {\r\n\r\n    handleResume = () => {\r\n        this.props.history.push('/load');\r\n        this.props.handleMenu(false);\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Menu pageWrapId={\"page-wrap\"} outerContainerId={\"root\"}\r\n                isOpen={this.props.open}\r\n                onStateChange={(state) => this.props.handleMenuStateChange(state)}\r\n                className='menu-width'\r\n            >\r\n                {this.props.question === 0 || this.props.question === (this.props.questions.length) ?\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n                            <Button variant=\"outlined\" className='button-start' size='large'\r\n                                onClick={this.props.handleStart}>\r\n                                START\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n\r\n                            <Button variant=\"outlined\" className='button-start'\r\n                                onClick={this.handleResume}>\r\n                                RESUME\r\n                                </Button>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n                            <Button variant=\"outlined\" className='button-start'\r\n                                onClick={this.props.toggleAdmin}>\r\n                                ADMIN MODE</Button>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Divider variant='middle' style={{ backgroundColor: '#fff' }} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <span style={{ color: 'white' }}>\r\n                                From Python to JS is a quick and easy online module will teach you JavaScript, the popular programming language used for the Web.\r\n                                </span>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :\r\n                    <Grid container spacing={2} className='h-100'>\r\n                        <Grid item xs={12}>\r\n                            <span style={{ color: 'white' }}>\r\n                                Are you feeling lost? Need some help? Here are some resources to help you learn.\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <span style={{ color: 'white' }}>\r\n                                <a href='https://www.w3schools.com/js/' target='_blank' rel=\"noopener noreferrer\">01. W3 Schools</a>\r\n                            </span>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <span style={{ color: 'white' }}>\r\n                                <a href='https://developer.mozilla.org/en-US/docs/Web/JavaScript' target='_blank' rel=\"noopener noreferrer\">02. MDN Web Documents</a>\r\n                            </span>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Divider variant='middle' style={{ backgroundColor: '#fff' }} />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <span style={{ color: 'white' }}>\r\n                                Want to continue some other time? Simply key in a unique key and save!\r\n                            </span>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <label className=\"field a-field a-field_a3\">\r\n                                <input className=\"field__input a-field__input\" value={this.props.userID}\r\n                                    onChange={(e) => { this.props.onUserIDChange(e.target.value); }}\r\n                                />\r\n                                <span className=\"a-field__label-wrap\">\r\n                                    <span className=\"a-field__label\">Enter User ID</span>\r\n                                </span>\r\n                            </label>\r\n                            <div className='d-flex'>\r\n                                <Button variant=\"outlined\" className='button-start' size='large'\r\n                                    onClick={this.props.handleSaveState}>\r\n                                    SAVE\r\n                                </Button>\r\n                                <Button variant=\"outlined\" className='button-start ml-auto' size='large'\r\n                                    onClick={this.props.handleLoadState}>\r\n                                    LOAD\r\n                                </Button>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                }\r\n            </Menu>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default withRouter(SliderMenu);\r\n","import * as firebase from 'firebase';\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nvar firebaseConfig = require('./firebaseConfig.json');\r\nexport const firebaseApp = firebase.initializeApp(firebaseConfig);","import React from 'react';\r\nimport { QuestionIface } from \"../Form/Question\";\r\nimport AceEditor from \"react-ace\";\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/monokai';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\n\r\ntype MyProps = {\r\n    questions: QuestionIface[],\r\n    question: number,\r\n};\r\n\r\nclass PastAnswers extends React.Component<MyProps, {}> {\r\n\r\n    state = {\r\n        showAnswer: 0,\r\n    };\r\n\r\n    handlePastAnswerSelect = (e: any) => {\r\n        this.setState({ showAnswer: e.target.value })\r\n    };\r\n\r\n    render() {\r\n        const questions = this.props.questions;\r\n        const currQ = this.props.question;\r\n\r\n        if (!questions[currQ].pastAnswers || questions[currQ].pastAnswers.length === 0) {\r\n            return (\r\n                <h6 className=\"text-center\">You have not submitted any answer yet.</h6>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Container fluid>\r\n                <Row style={{ position: \"absolute\", top: '-40px' }}>\r\n                    <Paper>\r\n                        <FormControl>\r\n                            <Select value={this.state.showAnswer} onChange={this.handlePastAnswerSelect}>\r\n                                {questions[currQ].pastAnswers.map((ans, index) => {\r\n                                    return (\r\n                                        <MenuItem value={index}>{index + 1}. Attempt {index + 1}</MenuItem>\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Paper>\r\n                </Row>\r\n                <Row style={{ height: '50vh' }}>\r\n                    <Col xs={6} style={{ height: '100%' }}>\r\n                        <AceEditor\r\n                            readOnly={true}\r\n                            wrapEnabled\r\n                            height='50vh'\r\n                            width='100%'\r\n                            mode=\"javascript\"\r\n                            theme=\"monokai\"\r\n                            name=\"info-section\"\r\n                            tabSize={0}\r\n                            editorProps={{\r\n                                $blockScrolling: true,\r\n                            }}\r\n                            value={questions[currQ].pastAnswers[this.state.showAnswer].pastAnswer as string}\r\n                            style={{ maxWidth: 570 }}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={6} style={{ height: '100%' }}>\r\n                        <Paper style={{ height: \"100%\", overflow: \"scroll\" }}>\r\n                            <div\r\n                                dangerouslySetInnerHTML={{ __html: questions[currQ].pastAnswers[this.state.showAnswer].errorMessage }} />\r\n                        </Paper>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PastAnswers;\r\n\r\n","import React, { Component } from 'react';\r\nimport Typist from 'react-typist';\r\nimport 'react-typist/dist/Typist.css';\r\nimport { Container, Col, Row, Alert } from 'react-bootstrap';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport { QuestionIface } from \"../Form/Question\";\r\nimport Question from \"../Form/Question\";\r\nimport PastAnswers from \"../PastAnswers/PastAnswers\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\nimport AceEditor from 'react-ace';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\n\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/monokai';\r\n\r\nimport './QuestionInterface.css'\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\ntype MyProps = {\r\n    question: number,\r\n    showAlert: boolean,\r\n    isLoading: boolean,\r\n\r\n    // for feed\r\n    feedbackRating: number,\r\n    onFeedbackRatingChange: (feedbackRating: number) => void,\r\n\r\n    questions: QuestionIface[],\r\n    handleStart: () => void,\r\n    handleStartOver: () => void,\r\n    handleNextQuestion: () => void,\r\n    handlePrevQuestion: () => void,\r\n    handleCheckAnswer: () => void,\r\n    handleResetAnswer: () => void,\r\n    toggleComplete: (arg0: boolean) => void,\r\n    handleClickQuestion: (arg0: number) => void,\r\n    handleAlertClose: () => void,\r\n    saveState: () => void,\r\n};\r\n\r\nclass QuestionInterface extends Component<MyProps, {}> {\r\n    state = {\r\n        showPastAnswers: false,\r\n    };\r\n\r\n    handlePastAnswerSwitch = (e: any) => {\r\n        this.setState({ showPastAnswers: e.target.checked })\r\n    };\r\n\r\n    handleCloseHistory = () => {\r\n        this.setState({ showPastAnswers: false })\r\n    };\r\n\r\n\r\n    renderQuestion = () => {\r\n        const questions = this.props.questions;\r\n        const currQ = this.props.question;\r\n        switch (currQ) {\r\n            case 0:\r\n                return (\r\n                    <div className='d-flex align-items-center justify-content-center flex-column'>\r\n                        <Typist className='title-font'>\r\n                            Learn how to script in JavaScript from Python!\r\n                        </Typist>\r\n                        <div className='d-flex align-items-center justify-content-center flex-column'\r\n                            style={{ marginTop: '25px' }}>\r\n                            <AceEditor\r\n                                readOnly={false}\r\n                                wrapEnabled\r\n                                height='50vh'\r\n                                width='70vw'\r\n                                fontSize={16}\r\n                                showPrintMargin={false}\r\n                                mode=\"javascript\"\r\n                                theme=\"monokai\"\r\n                                name=\"info-section\"\r\n                                tabSize={0}\r\n                                editorProps={{\r\n                                    $blockScrolling: true,\r\n                                }}\r\n                                value={questions[currQ].questionText as string}\r\n                            />\r\n                        </div>\r\n                        <Button variant=\"outlined\" className='button-start ml-auto' size='large'\r\n                            onClick={this.props.handleStart}>\r\n                            START\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            case questions.length:\r\n                return (\r\n                    <div className='d-flex flex-column align-items-center justify-content-center'>\r\n                        <Typist className='title-font'>\r\n                            Congratulations on finishing the course\r\n                        </Typist>\r\n                        <p style={{ marginBottom: 0 }}>Please leave us a rating below</p>\r\n                        <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n                            <Rating\r\n                                name=\"simple-controlled\"\r\n                                value={this.props.feedbackRating}\r\n                                onChange={(event, newValue) => {\r\n                                    this.props.onFeedbackRatingChange(newValue);\r\n                                    // save rating to firebase\r\n                                    this.props.saveState();\r\n                                }}\r\n                                size=\"large\"\r\n                                emptyIcon={<StarBorderIcon fontSize=\"inherit\" style={{ color: \"white\" }} />}\r\n                            />\r\n                        </Box>\r\n                        <p>And also help us to complete a feedback form <a\r\n                            href='https://docs.google.com/forms/d/e/1FAIpQLSfM35tbCqA1qp8Z95il-rWhtXZdLI_3orBRK8onNHISGxbYNQ/viewform?usp=sf_link'\r\n                            className='feedback-link'>here</a>.</p>\r\n                        <Button variant=\"outlined\" className='button-start' size='large'\r\n                            onClick={this.props.handleStartOver}>\r\n                            START OVER\r\n                        </Button>\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <Question question={questions[currQ]}\r\n                        index={currQ}\r\n                        nextQuestion={this.props.handleNextQuestion}\r\n                        prevQuestion={this.props.handlePrevQuestion}\r\n                        checkAnswer={this.props.handleCheckAnswer}\r\n                        resetAnswer={this.props.handleResetAnswer}\r\n                        lastQuestion={currQ === questions.length - 1}\r\n                        toggleComplete={this.props.toggleComplete}\r\n                        isLoading={this.props.isLoading} />\r\n\r\n                );\r\n\r\n        }\r\n    };\r\n\r\n    renderPastAnswers = () => {\r\n        return <PastAnswers questions={this.props.questions}\r\n            question={this.props.question} />\r\n    };\r\n\r\n    renderContent = () => {\r\n        if (!this.state.showPastAnswers) {\r\n            return this.renderQuestion()\r\n        } else {\r\n            return this.renderPastAnswers();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const questions = this.props.questions;\r\n        const currQ = this.props.question;\r\n        const listQuestions = this.props.questions.map((question, index) => {\r\n            if (index === 0) {\r\n                return null;\r\n            }\r\n            let className = 'question-circle';\r\n            if (question.completed) {\r\n                className += ' completed';\r\n            }\r\n            if (index === currQ) {\r\n                className += ' current'\r\n            }\r\n            return (\r\n                <Tab key={index}\r\n                    className={`d-flex align-items-center`}\r\n                    label={\r\n                        <div className='d-flex align-items-center'>\r\n                            <div className={className}>{index}</div>\r\n                        </div>\r\n                    }\r\n                />);\r\n        });\r\n\r\n        return (\r\n            <Container fluid>\r\n                {this.props.showAlert ?\r\n                    <Row className='d-flex align-items-center justify-content-center' style={{ marginBottom: 10 }}>\r\n                        <Col xs={10}>\r\n                            {this.props.questions[currQ].completed ?\r\n                                <Alert variant='success' onClose={this.props.handleAlertClose} dismissible>\r\n                                    You answered the question correctly! Please move on to the next question.\r\n                                </Alert> :\r\n                                <Alert variant='danger' onClose={this.props.handleAlertClose} dismissible>\r\n                                    Please try again! You can use the hints if you need more help.\r\n                                </Alert>\r\n                            }\r\n                        </Col>\r\n                    </Row> : ''\r\n                }\r\n                {currQ > 0 && currQ < questions.length ?\r\n                    <Row className='d-flex align-items-center justify-content-center'>\r\n                        <Tabs\r\n                            value={currQ - 1}\r\n                            onChange={(e, v) => {\r\n                                if (questions[v + 1].completed) {\r\n                                    this.handleCloseHistory();\r\n                                    this.props.handleClickQuestion(v + 1)\r\n                                }\r\n                            }}\r\n                            textColor=\"primary\"\r\n                            variant='fullWidth'\r\n                            centered\r\n                            TabIndicatorProps={\r\n                                {\r\n                                    className: 'active-tab',\r\n                                    style: { display: \"none\" }\r\n                                }\r\n                            }\r\n                        >\r\n                            {listQuestions}\r\n                        </Tabs>\r\n                    </Row> : ''}\r\n                {currQ > 0 && currQ < questions.length ?\r\n                    <Row className='d-flex align-items-center justify-content-center'>\r\n                        <h3 className='question-title'>{this.props.questions[currQ].questionTitle}</h3>\r\n                        <FormGroup row style={{ position: \"absolute\", right: 0 }}>\r\n                            <FormControlLabel\r\n                                color=\"primary\"\r\n                                control={\r\n                                    <Switch checked={this.state.showPastAnswers}\r\n                                        onChange={this.handlePastAnswerSwitch}\r\n                                        value=\"showPastAnswers\" />\r\n                                }\r\n                                label=\"Show Past Answers\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Row>\r\n                    : ''\r\n                }\r\n                <Row className='d-flex align-items-center justify-content-center'>\r\n                    <Col>\r\n                        {this.renderContent()}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuestionInterface;\r\n","import {QuestionIface, QuestionType} from \"./components/Form/Question\";\r\n\r\nexport const questions: QuestionIface[] =\r\n    [\r\n        {\r\n            questionTitle: \"\",\r\n            questionTutorial: \"\",\r\n            questionText: \"/*\\n Welcome to From Python to JS. \\n\\n This quick and easy online module will teach you JavaScript, the popular programming language used for the Web. \\n\\n JavaScript is a scripting or programming language that allows you to implement complex things on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, interactive maps, animated 2D/3D graphics, scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved. It is the third layer of the layer cake of standard web technologies, along with HTML and CSS .\\n*/\",\r\n            answer: \"\",\r\n            defaultAnswer: \"\",\r\n            hint: \"\",\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: ``,\r\n            exportCode: '',\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Comments\",\r\n            questionTutorial: \"In JavaScipt, commenting can be done by using: \\n // For single line code \\n /* For multiline code */\",\r\n            questionText: \"Please convert the following to JavaScript syntax!\",\r\n            hint: \"Replace # with // and ''' with /*\",\r\n            answer: \"# a one line comment\\n\" +\r\n                \"\\n\" +\r\n                \"'''\\n\" +\r\n                \"this is a longer,\\n\" +\r\n                \"multi-line comment\\n\" +\r\n                \"'''\",\r\n            defaultAnswer: \"# a one line comment\\n\" +\r\n                \"\\n\" +\r\n                \"'''\\n\" +\r\n                \"this is a longer,\\n\" +\r\n                \"multi-line comment\\n\" +\r\n                \"'''\",\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"default\", () => {\r\n    expect(1).toBe(1);\r\n});`,\r\n            exportCode: '',\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Declarations\",\r\n            questionTutorial: \"In JavaScipt, there are three kinds of variable declarations in JS.\\n\" +\r\n                \"let: Declares a block-scoped, local variable, optionally initializing it to a value\\n\" +\r\n                \"const: Declares a block-scoped, read-only named constant.\\n\",\r\n            questionText: \"Please convert the following to JavaScript syntax!\",\r\n            hint: \"Declare your variables with const when needed\",\r\n            answer: `x = 42\r\ny = 13\r\nx = \"forty-two\"\r\nz = \"The answer is \" + 42\r\ncoffees = ['French Roast', 'Colombian', 'Kona']\r\n`,\r\n            defaultAnswer: `x = 42\r\ny = 13\r\nx = \"forty-two\"\r\nz = \"The answer is \" + 42\r\ncoffees = ['French Roast', 'Colombian', 'Kona']\r\n`,\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"task2\", () => {\r\n    expect(app.x).toBe(\"forty-two\");\r\n    expect(app.y).toBe(13);\r\n    expect(app.z).toBe(\"The answer is 42\");\r\n    expect(app.coffees).toEqual(['French Roast', 'Colombian', 'Kona']);\r\n});`,\r\n            exportCode: `\r\nexports.x = x;\r\nexports.y = y;\r\nexports.z = z;\r\nexports.coffees = coffees;`,\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Basic Functions\",\r\n            questionTutorial: \"In JavaScipt, we first have to declare functions as functions.\\n Also, replace the : with curly braces {}\",\r\n            questionText: \"Please convert the following to JavaScript syntax!\",\r\n            hint: \"Look up how to write a simple Javascript function on MDN\",\r\n            answer: \"def square(num):\\n      return num * num\",\r\n            defaultAnswer: \"def square(num):\\n      return num * num\",\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"square\", () => {\r\n    expect(app.square(3)).toBe(9);\r\n    expect(app.square(-3)).toBe(9);\r\n});`,\r\n            exportCode: \"\\nexports.square = square;\",\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Arrow functions\",\r\n            questionTutorial: `An arrow function has a shorter syntax compared to function expressions. Arrow functions are always anonymous.\r\nConvert square to an arrow function.\r\n            `,\r\n            questionText: \"Please convert 'square' into an arrow function\",\r\n            hint: \"Look up how to write a arrow functions on MDN\",\r\n            answer: `function square(num) {\r\n    return num * num;\r\n}`,\r\n            defaultAnswer: `function square(num) {\r\n    return num * num;\r\n}`,\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"square\", () => {\r\n    expect(app.square(3)).toBe(9);\r\n    expect(app.square(-3)).toBe(9);\r\n});`,\r\n            exportCode: \"\\nexports.square = square;\",\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Rest Parameters\",\r\n            questionTutorial: \"The rest parameter syntax allows us to represent an indefinite number of arguments as an array.\\n In the example, we use the rest parameters to collect arguments from the second one to the end. We then multiply them by the first one.\",\r\n            questionText: \"Please convert the following to JavaScript syntax!\",\r\n            hint: \"The equivalent of '*args' in Python is '...args' in Javascript\",\r\n            answer: \"def multiply(multiplier, *args):\\n\" +\r\n                \"    return map(lambda x: multiplier * x, args) \\n\" +\r\n                \"\\n\" +\r\n                \"var arr = multiply(2, 1, 2, 3);\\n\" +\r\n                \"console.log(arr); // [2, 4, 6]\",\r\n            defaultAnswer: \"def multiply(multiplier, *args):\\n\" +\r\n                \"    return map(lambda x: multiplier * x, args) \\n\" +\r\n                \"\\n\" +\r\n                \"var arr = multiply(2, 1, 2, 3);\\n\" +\r\n                \"console.log(arr); // [2, 4, 6]\",\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"default\", () => {\r\n    expect(app.multiply(2,1,2,3)).toEqual([2,4,6]);\r\n});`,\r\n            exportCode: \"\\nexports.multiply = multiply;\",\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Control Flow: if-else\",\r\n            questionTutorial: \"Using if-else, define a function odd(x) that returns True when its integer argument is an odd number and False otherwise\\n\",\r\n            questionText: \"Define a function odd(x)\",\r\n            hint: \"if-else statements are surrounded by curly braces\",\r\n            answer: `function odd(x) {\r\n\r\n}`,\r\n            defaultAnswer: `function odd(x) {\r\n\r\n}`,\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"default\", () => {\r\n    expect(app.odd(1)).toBeTruthy();\r\n    expect(app.odd(2)).not.toBeTruthy();\r\n    expect(app.odd(3)).toBeTruthy();\r\n});`,\r\n            exportCode: '\\nexports.odd = odd;',\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Control Flow: switch\",\r\n            questionTutorial: `Using switch, write a function getPrice that takes in the name of a fruit and returns the price of the fruit. Oranges are $1, apples are $2, and bananas are $3. If the fruit is none of the 3, return an apology. Sample execution below:`,\r\n            questionText: \"Write the function 'getPrice()'\",\r\n            hint: \"\",\r\n            answer: `\r\nfunction getPrice(fruits) {\r\n}\r\ngetPrice('oranges') // returns \"$1\"\r\ngetPrice('apples') // returns \"$2\"\r\ngetPrice('pears') // returns \"Sorry, we are out of pears.\"\r\n`,\r\n            defaultAnswer: `\r\nfunction getPrice(fruits) {\r\n}\r\ngetPrice('oranges') // returns \"$1\"\r\ngetPrice('apples') // returns \"$2\"\r\ngetPrice('pears') // returns \"Sorry, we are out of pears.\"\r\n`,\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"default\", () => {\r\n    expect(app.getPrice(\"oranges\")).toBe(\"$1\");\r\n    expect(app.getPrice(\"apples\")).toBe(\"$2\");\r\n    expect(app.getPrice(\"bananas\")).toBe(\"$3\");\r\n    expect(app.getPrice(\"other\")).toBe(\"Sorry, we are out of other.\");\r\n});`,\r\n            exportCode: '\\nexports.getPrice = getPrice;',\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Loops and Iterations: for loop\",\r\n            questionTutorial: \"The for statement creates a loop that is executed as long as a condition is true.\",\r\n            questionText: \"Please convert the following to JavaScript syntax!\",\r\n            hint: \"\",\r\n            answer: `\r\n// A for-loop\r\nfor step in range(5):\r\n    print(\"i am at step: \" + step)\r\n    \r\n// A while-loop\r\nn = 0\r\nx = 0\r\nwhile n < 3:\r\n    n += 1\r\n    x += n\r\n\r\n// A for-of loop\r\narr = [3,5,7]\r\nfor element in arr:\r\n    print(arr)`,\r\n            defaultAnswer: `\r\n// A for-loop\r\nfor step in range(5):\r\n    print(\"i am at step: \" + step)\r\n    \r\n// A while-loop\r\nn = 0\r\nx = 0\r\nwhile n < 3:\r\n    n += 1\r\n    x += n\r\n\r\n// A for-of loop\r\narr = [3,5,7]\r\nfor element in arr:\r\n    print(arr)`,\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"while loop\", () => {\r\n    expect(app.x).toBe(6);\r\n    expect(app.n).toBe(3);\r\n});`,\r\n            exportCode: `\r\nexports.x = x;\r\nexports.n = n;`,\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Working with Objects\",\r\n            questionTutorial: \"Objects are similar to Python dictionaries, they hold a key:value pairing. An example of initialising a object is as shown below:\\n\",\r\n            questionText: \"Using a for..in loop, add all available properties of myCar into an array\",\r\n            hint: \"Convert the Python for loop to a Javascript for-in loop\",\r\n            answer: `\r\nconst myCar = {};\r\nmyCar.make = 'Ford';\r\nmyCar.model = 'Mustang';\r\nmyCar.year = 1969;\r\n\r\nconst res = []\r\n\r\nfor k in myCar.keys():\r\n   res.append(myCar[k]) \r\n            `,\r\n            defaultAnswer: `\r\nconst myCar = {};\r\nmyCar.make = 'Ford';\r\nmyCar.model = 'Mustang';\r\nmyCar.year = 1969;\r\n\r\nconst res = []\r\n\r\nfor k in myCar.keys():\r\n   res.append(myCar[k]) \r\n            `,\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.EditableCode,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"task 8\", () => {\r\n    expect(app.res.length).toBe(3);\r\n});`,\r\n            exportCode: `\r\nexports.res = res;`,\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Promises\",\r\n            questionTutorial: \"Please answer the following MCQ qns.\",\r\n            questionText: [`new Promise((resolve, reject) => {\r\n        console.log('Initial');\r\n        resolve();\r\n    })\r\n    .then(() => {\r\n        throw new Error('Something failed');\r\n        console.log('Do this');\r\n    })\r\n    .catch(() => {\r\n        console.error('Do that');\r\n    })\r\n    .then(() => {\r\n        console.log('Do this, no matter what');\r\n    });`,\r\n                `Initial\r\n Do this`,\r\n                `Initial\r\n Do this\r\n Do that`,\r\n                `Initial\r\n Do that\r\n Do this, no matter what`,\r\n                `Initial\r\n Something failed\r\n Do this\r\n Do that`\r\n            ],\r\n            answer: '',\r\n            defaultAnswer: '',\r\n            hint: \"\",\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.MultipleChoice,\r\n            testCode: `\r\nconst app = require(\"./main\");\r\ntest(\"task 9\", () => {\r\n    expect(app.x).toBe(3);\r\n});`,\r\n            exportCode: `\r\nexports.x = x;`,\r\n            pastAnswers: [],\r\n        },\r\n        {\r\n            questionTitle: \"Display Dynamic List\",\r\n            questionTutorial: \"Please look for the comments and edit the code as deem fit.\",\r\n            questionText: \"Using what you have learned previously, complete the 2 following functions.\\n 1. Write a function to add item into an array\\n 2. Write a function to map array to following functions in place of where the comment should be at\\n\\nThen add 4 items into the list.\",\r\n            answer:\"\",\r\n            defaultAnswer:\r\n                \"class List extends React.Component {\\n\" +\r\n                \"  constructor() {\\n\" +\r\n                \"    super()\\n\" +\r\n                \"    this.state = { \\n\" +\r\n                \"      input: '',\\n\" +\r\n                \"      inputList:[],\\n\" +\r\n                \"     }\\n\" +\r\n                \"     \\n\" +\r\n                \"     this.inputListExport = []\\n\" +\r\n                \"     this.insertElement=this.insertElement.bind(this)\\n\" +\r\n                \"     this.handleInputChange = this.handleInputChange.bind(this)\\n\" +\r\n                \"  }\\n\" +\r\n                \"  \\n\" +\r\n                \"  handleInputChange(e){\\n\" +\r\n                \"    this.setState({input:e.target.value})\\n\" +\r\n                \"  }\\n\" +\r\n                \"  \\n\" +\r\n                \"  insertElement(){\\n\" +\r\n                \"    let text = this.state.input\\n\" +\r\n                \"    let inputList = this.state.inputList\\n\" +\r\n                \"    //Please add text to the following inputList\\n\" +\r\n                \"    \\n\" +\r\n                \"    this.inputListExport = inputList\\n\" +\r\n                \"    this.setState({inputList:inputList})\\n\" +\r\n                \"  }\\n\" +\r\n                \"  \\n\" +\r\n                \"  renderList(){\\n\" +\r\n                \"    let res=[]\\n\" +\r\n                \"    let inputList = this.state.inputList\\n\" +\r\n                \"    // Add All object in inputList into res\\n\" +\r\n                \"    \\n\" +\r\n                \"      res.push(<li>{\\n\" +\r\n                \"       i\\n\" +\r\n                \"      }</li>)\\n\" +\r\n                \"    \\n\" +\r\n                \"    return res\\n\" +\r\n                \"  }\\n\" +\r\n                \"  \\n\" +\r\n                \"  render(){\\n\" +\r\n                \"    return(\\n\" +\r\n                \"    <div>\\n\" +\r\n                \"    <ol id=\\\"listDisplay\\\">{this.renderList()}</ol>\\n\" +\r\n                \"    <input type=\\\"text\\\" onChange={this.handleInputChange}/>\\n\" +\r\n                \"    <button onClick={this.insertElement}>Insert</button>\\n\" +\r\n                \"   </div>\\n\" +\r\n                \"    )\\n\" +\r\n                \"  }\\n\" +\r\n                \"}\",\r\n            hint: \"\",\r\n            feedbackText: \"\",\r\n            completed: false,\r\n            type: QuestionType.HTMLCode,\r\n            testCode: `\r\n            const app = require(\"./main\");\r\n            test(\"task 10\", () => {\r\n                expect(1).toBe(1);\r\n            });`,\r\n            exportCode: '',\r\n            pastAnswers: [],\r\n        },\r\n    ]","import React from 'react';\r\nimport { firebaseApp } from \"../../util/firebase\";\r\nimport * as firebase from 'firebase';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Icon from '@mdi/react';\r\nimport { mdiFacebookBox, mdiGoogle } from '@mdi/js';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport './Resume.css'\r\n\r\ntype MyProps = RouteComponentProps & {\r\n    userID: string,\r\n    onUserIDChange: (name: string) => void,\r\n    handleSaveState: () => void,\r\n    handleLoadState: () => void,\r\n};\r\n\r\nclass Resume extends React.Component<MyProps, {}> {\r\n\r\n    handleFacebook = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n        firebaseApp.auth().signInWithPopup(provider).then((result) => {\r\n            //console.log('Facebook login success');\r\n            if (result !== null && result.user !== null && result.user.uid !== null) {\r\n                const userID = result.user.uid;\r\n                this.props.onUserIDChange(userID);\r\n                this.props.handleLoadState();\r\n                this.props.history.push('/');\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    handleGoogle = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        e.preventDefault();\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        firebaseApp.auth().signInWithPopup(provider).then((result) => {\r\n            //console.log('Google login success');\r\n            if (result !== null && result.user !== null && result.user.uid !== null) {\r\n                const userID = result.user.uid;\r\n                this.props.onUserIDChange(userID);\r\n                this.props.handleLoadState();\r\n                this.props.history.push('/');\r\n\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: 425 }}>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n                        <span style={{ color: 'white', textAlign: \"center\", fontWeight: 'bold' }}>\r\n                            Type in your past user ID to continue or login to save your progress\r\n                        </span>\r\n                    </Grid>\r\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n                        <div className='w-100'>\r\n                            <label className=\"field a-field a-field_a3\">\r\n                                <input className=\"field__input a-field__input\" value={this.props.userID}\r\n                                    onChange={(e) => { this.props.onUserIDChange(e.target.value) }}\r\n                                />\r\n                                <span className=\"a-field__label-wrap\">\r\n                                    <span className=\"a-field__label\">Enter User ID</span>\r\n                                </span>\r\n                            </label>\r\n                            <div className='d-flex'>\r\n                                <Button variant=\"outlined\" className='button-start' size='large'\r\n                                    onClick={this.props.handleSaveState}>\r\n                                    SAVE\r\n                                </Button>\r\n                                <Button variant=\"outlined\" className='button-start ml-auto' size='large'\r\n                                    onClick={this.props.handleLoadState}>\r\n                                    LOAD\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n                        <Button variant=\"outlined\" onClick={this.handleFacebook} className='resume-auth' fullWidth>\r\n                            <span><Icon path={mdiFacebookBox} size={1} style={{ fill: 'white' }} /> Facebook</span>\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} className='d-flex align-items-center justify-content-center'>\r\n                        <Button variant=\"outlined\" onClick={this.handleGoogle} className='resume-auth' fullWidth>\r\n                            <span><Icon path={mdiGoogle} size={1} style={{ fill: 'white' }} /> Google</span>\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Resume);\r\n\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Route, Switch, withRouter } from 'react-router-dom';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SliderMenu from \"./components/Navigation/SliderMenu\";\r\nimport axios from \"axios\";\r\nimport { firebaseApp } from './util/firebase';\r\nimport { RouteComponentProps } from \"react-router\";\r\n\r\nimport QuestionInterface from './components/Question/QuestionInterface'\r\n\r\nimport './App.css';\r\nimport { questions } from \"./QuestionList\";\r\nimport Resume from \"./components/Resume/Resume\";\r\nimport { QuestionIface } from \"./components/Form/Question\";\r\n\r\nexport interface BackendResponse {\r\n    data: {\r\n        htmlFeedback: string;\r\n        isComplete: boolean;\r\n        jsonFeedback: any;\r\n        textFeedback: string;\r\n    }\r\n};\r\n\r\nclass App extends Component<RouteComponentProps> {\r\n\r\n    state = {\r\n        openMenu: false,\r\n        question: 0, // idx of current question that user is on\r\n        returnedData: null,\r\n        questions: questions,\r\n        feedbackRating: 0, // feedback rating out of 5\r\n        isLoading: false,\r\n        showAlert: false,\r\n        showSnackBar: false,\r\n        loggedIn: false,\r\n        uid: '',\r\n    };\r\n\r\n    componentDidMount(): void {\r\n        firebaseApp.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                let currentuser = firebaseApp.auth().currentUser;\r\n                if (currentuser !== null) {\r\n                    this.setState({\r\n                        uid: currentuser.uid,\r\n                        username: currentuser.displayName,\r\n                        loggedIn: true,\r\n                    });\r\n                }\r\n            } else {\r\n                this.setState({ loggedIn: false })\r\n            }\r\n        });\r\n    }\r\n\r\n    handleMenu = (isOpen: boolean) => {\r\n        this.setState({ openMenu: isOpen })\r\n    };\r\n\r\n\r\n    handleClickQuestion = (i: number) => {\r\n        this.setState({\r\n            openMenu: false,\r\n            question: i,\r\n            showAlert: false,\r\n        });\r\n    };\r\n\r\n    handleMenuStateChange = (state: any) => {\r\n        this.setState({ openMenu: state.isOpen })\r\n    };\r\n\r\n    handleStart = () => {\r\n        this.props.history.push('/');\r\n        this.setState({ question: 1, openMenu: false, })\r\n    };\r\n\r\n    handleNextQuestion = () => {\r\n        this.setState({ question: this.state.question + 1, showAlert: false })\r\n    };\r\n\r\n    handlePrevQuestion = () => {\r\n        this.setState({ question: this.state.question - 1, showAlert: false })\r\n    };\r\n\r\n    handleAlertClose = () => {\r\n        this.setState({ showAlert: false })\r\n    };\r\n\r\n    handleStartOver = () => {\r\n        // TODO clear progress of app\r\n        this.setState({ question: 0 })\r\n    };\r\n\r\n    handleResetAnswer = () => {\r\n        let questions = this.state.questions;\r\n        let question = questions[this.state.question];\r\n        question.answer = question.defaultAnswer;\r\n        this.setState({ questions })\r\n    };\r\n\r\n    handleCheckAnswer = async () => {\r\n        //Add in fetch nonsense\r\n        this.setState({ isLoading: true });\r\n        let gatewayURL = \"https://cl8r4dbpqe.execute-api.us-east-1.amazonaws.com/Prod/\";\r\n        let questionURL = gatewayURL + `?question=${this.state.question}`;\r\n        let answer = {\r\n            \"userToken\": \"ABCDE\",\r\n            \"shown\": {\r\n                \"0\": this.state.questions[this.state.question].testCode\r\n            },\r\n            \"editable\": {\r\n                \"0\": this.state.questions[this.state.question].answer + this.state.questions[this.state.question].exportCode\r\n            },\r\n            \"hidden\": {\r\n                \"0\": `{\\n\"scripts\":{ \"test\":\"jest\" }\\n}`,\r\n            }\r\n        };\r\n        try {\r\n            const res: BackendResponse = await axios.post(questionURL, { ...answer }, {\r\n                headers: {\r\n                    Accept: 'application/json',\r\n                }\r\n            });\r\n            console.log(res);\r\n            let questions = this.state.questions;\r\n            questions[this.state.question].completed = res.data.isComplete;\r\n            questions[this.state.question].feedbackText = res.data.htmlFeedback;\r\n            questions[this.state.question].pastAnswers.push({\r\n                pass: res.data.isComplete,\r\n                pastAnswer: questions[this.state.question].answer,\r\n                errorMessage: res.data.htmlFeedback,\r\n            });\r\n\r\n            this.setState({ questions: questions });\r\n            if (this.state.loggedIn) {\r\n                this.handleSaveState();\r\n            }\r\n        } catch (err) {\r\n            console.error(err);\r\n        } finally {\r\n            this.setState({ isLoading: false, showAlert: true });\r\n        }\r\n\r\n    };\r\n\r\n    handleSaveState = () => {\r\n        const name = this.state.uid;\r\n        let data = {\r\n            questions: this.state.questions,\r\n            userId: name,\r\n            feedbackRating: this.state.feedbackRating,\r\n            currentQuestion: this.state.question,\r\n        };\r\n        firebaseApp.database().ref(`/userdata/${name}`).update(data)\r\n        console.log(\"saved data to firebase!\")\r\n    };\r\n\r\n    handleLoadState = () => {\r\n        const name = this.state.uid;\r\n        let db = firebaseApp.database().ref(`/userdata/${name}`);\r\n        db.once('value').then((snapshot) => {\r\n            const data = snapshot.val();\r\n            if (data !== null) {\r\n                let questions: QuestionIface[] = Object.values(data.questions);\r\n                for (let q of questions) {\r\n                    if (q.pastAnswers) { q.pastAnswers = Object.values(q.pastAnswers); }\r\n                }\r\n                this.setState({\r\n                    questions: questions,\r\n                    feedbackRating: data.feedbackRating,\r\n                    question: data.currentQuestion\r\n                });\r\n                // close menu and open snackbar\r\n                this.setState({\r\n                    showSnackBar: true,\r\n                    openMenu: false,\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    };\r\n\r\n    toggleAdmin = () => {\r\n        const pw = prompt('Please enter password');\r\n        if (pw === \"richu\") {\r\n            const questions = this.state.questions;\r\n            questions.forEach(q => {\r\n                q.completed = true;\r\n            });\r\n            this.props.history.push('/');\r\n            this.setState({\r\n                questions: questions,\r\n                question: 1,\r\n                openMenu: false\r\n            });\r\n        }\r\n    };\r\n\r\n    toggleComplete = (isComplete: boolean) => {\r\n        let questions = this.state.questions;\r\n        questions[this.state.question].completed = isComplete;\r\n        this.setState({ questions: questions })\r\n    };\r\n\r\n    render() {\r\n        const currQ = this.state.question;\r\n        return (\r\n            <div className=\"App\">\r\n                <SliderMenu open={this.state.openMenu} handleMenu={this.handleMenu}\r\n                    handleMenuStateChange={this.handleMenuStateChange}\r\n                    handleClickQuestion={this.handleClickQuestion}\r\n                    handleStart={this.handleStart}\r\n                    questions={this.state.questions}\r\n                    question={currQ}\r\n                    toggleAdmin={this.toggleAdmin}\r\n                    handleSaveState={this.handleSaveState}\r\n                    handleLoadState={this.handleLoadState}\r\n                    userID={this.state.uid}\r\n                    onUserIDChange={(name) => { this.setState({ uid: name }) }}\r\n                />\r\n                <Container fluid className='d-flex align-items-center justify-content-center flex-column p-5'\r\n                    id='page-wrap'>\r\n\r\n                    <Switch>\r\n                        <Route exact path=\"/\"\r\n                            render={(props) => <QuestionInterface {...props} questions={this.state.questions}\r\n                                question={currQ} handleStart={this.handleStart}\r\n                                feedbackRating={this.state.feedbackRating}\r\n                                handleStartOver={this.handleStartOver}\r\n                                showAlert={this.state.showAlert}\r\n                                handleNextQuestion={this.handleNextQuestion}\r\n                                handlePrevQuestion={this.handlePrevQuestion}\r\n                                handleCheckAnswer={this.handleCheckAnswer}\r\n                                handleResetAnswer={this.handleResetAnswer}\r\n                                toggleComplete={this.toggleComplete}\r\n                                isLoading={this.state.isLoading}\r\n                                handleAlertClose={this.handleAlertClose}\r\n                                handleClickQuestion={this.handleClickQuestion}\r\n                                saveState={this.handleSaveState}\r\n                                onFeedbackRatingChange={(n) => { this.setState({ feedbackRating: n }); }}\r\n\r\n                            />} />\r\n                        <Route exact path='/load' render={(props) => <Resume {...props}\r\n                            handleSaveState={this.handleSaveState}\r\n                            handleLoadState={this.handleLoadState}\r\n                            userID={this.state.uid}\r\n                            onUserIDChange={(name) => { this.setState({ uid: name }) }}\r\n                        />} />\r\n                    </Switch>\r\n                    <Snackbar anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\r\n                        open={this.state.showSnackBar}\r\n                        autoHideDuration={3000}\r\n                        onClose={() => { this.setState({ showSnackBar: false }) }}\r\n                        message={<span id=\"message-id\">Profile has been successfully loaded.</span>}\r\n                        action={\r\n                            <IconButton\r\n                                key=\"close\"\r\n                                color=\"inherit\"\r\n                                onClick={() => { this.setState({ showSnackBar: false }) }}\r\n                            >\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        }\r\n                        TransitionComponent={(props) => { return <Slide {...props} direction=\"up\" /> }}\r\n                    />\r\n                </Container>\r\n            </div>\r\n        )\r\n            ;\r\n    }\r\n}\r\n\r\nexport default withRouter(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {HashRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router >\r\n        <App/>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}